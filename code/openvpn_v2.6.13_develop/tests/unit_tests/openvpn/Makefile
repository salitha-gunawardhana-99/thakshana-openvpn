# Makefile.in generated by automake 1.16.5 from Makefile.am.
# tests/unit_tests/openvpn/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/openvpn
pkgincludedir = $(includedir)/openvpn
pkglibdir = $(libdir)/openvpn
pkglibexecdir = $(libexecdir)/openvpn
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
am__append_1 = argv_testdriver buffer_testdriver
am__append_2 = tls_crypt_testdriver
#am__append_3 = cryptoapi_testdriver
#am__append_4 = pkcs11_testdriver
TESTS = $(am__EXEEXT_5)
check_PROGRAMS = $(am__EXEEXT_5) $(am__EXEEXT_6)
am__append_5 = networking_testdriver
subdir = tests/unit_tests/openvpn
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_socklen_t.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/version.m4 $(top_srcdir)/compat.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/include/openvpn-plugin.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = argv_testdriver$(EXEEXT) \
	buffer_testdriver$(EXEEXT)
am__EXEEXT_2 = tls_crypt_testdriver$(EXEEXT)
#am__EXEEXT_3 = cryptoapi_testdriver$(EXEEXT)
#am__EXEEXT_4 =  \
#	pkcs11_testdriver$(EXEEXT)
am__EXEEXT_5 = $(am__EXEEXT_1) crypto_testdriver$(EXEEXT) \
	packet_id_testdriver$(EXEEXT) auth_token_testdriver$(EXEEXT) \
	ncp_testdriver$(EXEEXT) misc_testdriver$(EXEEXT) \
	pkt_testdriver$(EXEEXT) ssl_testdriver$(EXEEXT) \
	user_pass_testdriver$(EXEEXT) $(am__EXEEXT_2) \
	provider_testdriver$(EXEEXT) $(am__EXEEXT_3) $(am__EXEEXT_4)
am__EXEEXT_6 = networking_testdriver$(EXEEXT)
am__dirstamp = $(am__leading_dot)dirstamp
am_argv_testdriver_OBJECTS = argv_testdriver-test_argv.$(OBJEXT) \
	argv_testdriver-mock_msg.$(OBJEXT) \
	argv_testdriver-mock_get_random.$(OBJEXT) \
	$(top_builddir)/src/openvpn/argv_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/argv_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/argv_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/argv_testdriver-argv.$(OBJEXT)
argv_testdriver_OBJECTS = $(am_argv_testdriver_OBJECTS)
argv_testdriver_LDADD = $(LDADD)
argv_testdriver_DEPENDENCIES =
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
argv_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(argv_testdriver_CFLAGS) $(CFLAGS) $(argv_testdriver_LDFLAGS) \
	$(LDFLAGS) -o $@
am_auth_token_testdriver_OBJECTS =  \
	auth_token_testdriver-test_auth_token.$(OBJEXT) \
	auth_token_testdriver-mock_msg.$(OBJEXT) \
	$(top_builddir)/src/openvpn/auth_token_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/auth_token_testdriver-crypto.$(OBJEXT) \
	$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/auth_token_testdriver-otime.$(OBJEXT) \
	$(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/auth_token_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/auth_token_testdriver-base64.$(OBJEXT)
auth_token_testdriver_OBJECTS = $(am_auth_token_testdriver_OBJECTS)
auth_token_testdriver_LDADD = $(LDADD)
auth_token_testdriver_DEPENDENCIES =
auth_token_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(auth_token_testdriver_CFLAGS) $(CFLAGS) \
	$(auth_token_testdriver_LDFLAGS) $(LDFLAGS) -o $@
am_buffer_testdriver_OBJECTS =  \
	buffer_testdriver-test_buffer.$(OBJEXT) \
	buffer_testdriver-mock_msg.$(OBJEXT) \
	buffer_testdriver-mock_get_random.$(OBJEXT) \
	$(top_builddir)/src/openvpn/buffer_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/buffer_testdriver-platform.$(OBJEXT)
buffer_testdriver_OBJECTS = $(am_buffer_testdriver_OBJECTS)
buffer_testdriver_LDADD = $(LDADD)
buffer_testdriver_DEPENDENCIES =
buffer_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(buffer_testdriver_CFLAGS) $(CFLAGS) \
	$(buffer_testdriver_LDFLAGS) $(LDFLAGS) -o $@
am_crypto_testdriver_OBJECTS =  \
	crypto_testdriver-test_crypto.$(OBJEXT) \
	crypto_testdriver-mock_msg.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-crypto.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-otime.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-packet_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-mtu.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/crypto_testdriver-mss.$(OBJEXT)
crypto_testdriver_OBJECTS = $(am_crypto_testdriver_OBJECTS)
crypto_testdriver_LDADD = $(LDADD)
crypto_testdriver_DEPENDENCIES =
crypto_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(crypto_testdriver_CFLAGS) $(CFLAGS) \
	$(crypto_testdriver_LDFLAGS) $(LDFLAGS) -o $@
am__cryptoapi_testdriver_SOURCES_DIST = test_cryptoapi.c mock_msg.c \
	pkey_test_utils.c cert_data.h \
	$(top_srcdir)/src/openvpn/xkey_helper.c \
	$(top_srcdir)/src/openvpn/xkey_provider.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/base64.c \
	$(top_srcdir)/src/openvpn/platform.c mock_get_random.c \
	$(top_srcdir)/src/openvpn/win32-util.c
#am_cryptoapi_testdriver_OBJECTS =  \
#	cryptoapi_testdriver-test_cryptoapi.$(OBJEXT) \
#	cryptoapi_testdriver-mock_msg.$(OBJEXT) \
#	cryptoapi_testdriver-pkey_test_utils.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.$(OBJEXT) \
#	cryptoapi_testdriver-mock_get_random.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.$(OBJEXT)
cryptoapi_testdriver_OBJECTS = $(am_cryptoapi_testdriver_OBJECTS)
cryptoapi_testdriver_LDADD = $(LDADD)
cryptoapi_testdriver_DEPENDENCIES =
cryptoapi_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(cryptoapi_testdriver_CFLAGS) $(CFLAGS) \
	$(cryptoapi_testdriver_LDFLAGS) $(LDFLAGS) -o $@
am_misc_testdriver_OBJECTS = misc_testdriver-test_misc.$(OBJEXT) \
	misc_testdriver-mock_msg.$(OBJEXT) \
	misc_testdriver-mock_get_random.$(OBJEXT) \
	$(top_builddir)/src/openvpn/misc_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/misc_testdriver-options_util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/misc_testdriver-ssl_util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/misc_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/misc_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/misc_testdriver-list.$(OBJEXT)
misc_testdriver_OBJECTS = $(am_misc_testdriver_OBJECTS)
misc_testdriver_LDADD = $(LDADD)
misc_testdriver_DEPENDENCIES =
misc_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(misc_testdriver_CFLAGS) $(CFLAGS) $(misc_testdriver_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ncp_testdriver_OBJECTS = ncp_testdriver-test_ncp.$(OBJEXT) \
	ncp_testdriver-mock_msg.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ncp_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ncp_testdriver-crypto.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ncp_testdriver-otime.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ncp_testdriver-packet_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ncp_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ncp_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/compat/ncp_testdriver-compat-strsep.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.$(OBJEXT)
ncp_testdriver_OBJECTS = $(am_ncp_testdriver_OBJECTS)
ncp_testdriver_LDADD = $(LDADD)
ncp_testdriver_DEPENDENCIES =
ncp_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(ncp_testdriver_CFLAGS) $(CFLAGS) $(ncp_testdriver_LDFLAGS) \
	$(LDFLAGS) -o $@
am__networking_testdriver_SOURCES_DIST = test_networking.c mock_msg.c \
	$(top_srcdir)/src/openvpn/networking_sitnl.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c
am_networking_testdriver_OBJECTS = networking_testdriver-test_networking.$(OBJEXT) \
	networking_testdriver-mock_msg.$(OBJEXT) \
	$(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/networking_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/networking_testdriver-crypto.$(OBJEXT) \
	$(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/networking_testdriver-otime.$(OBJEXT) \
	$(top_builddir)/src/openvpn/networking_testdriver-packet_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/networking_testdriver-platform.$(OBJEXT)
networking_testdriver_OBJECTS = $(am_networking_testdriver_OBJECTS)
networking_testdriver_LDADD = $(LDADD)
networking_testdriver_DEPENDENCIES =
networking_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(networking_testdriver_CFLAGS) $(CFLAGS) \
	$(networking_testdriver_LDFLAGS) $(LDFLAGS) -o $@
am_packet_id_testdriver_OBJECTS =  \
	packet_id_testdriver-test_packet_id.$(OBJEXT) \
	packet_id_testdriver-mock_msg.$(OBJEXT) \
	packet_id_testdriver-mock_get_random.$(OBJEXT) \
	$(top_builddir)/src/openvpn/packet_id_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/packet_id_testdriver-otime.$(OBJEXT) \
	$(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/packet_id_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/packet_id_testdriver-reliable.$(OBJEXT) \
	$(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/packet_id_testdriver-session_id.$(OBJEXT)
packet_id_testdriver_OBJECTS = $(am_packet_id_testdriver_OBJECTS)
packet_id_testdriver_LDADD = $(LDADD)
packet_id_testdriver_DEPENDENCIES =
packet_id_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(packet_id_testdriver_CFLAGS) $(CFLAGS) \
	$(packet_id_testdriver_LDFLAGS) $(LDFLAGS) -o $@
am__pkcs11_testdriver_SOURCES_DIST = test_pkcs11.c mock_msg.c \
	pkey_test_utils.c cert_data.h mock_get_random.c \
	$(top_srcdir)/src/openvpn/xkey_helper.c \
	$(top_srcdir)/src/openvpn/xkey_provider.c \
	$(top_srcdir)/src/openvpn/argv.c \
	$(top_srcdir)/src/openvpn/env_set.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/run_command.c \
	$(top_srcdir)/src/openvpn/base64.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/pkcs11.c \
	$(top_srcdir)/src/openvpn/pkcs11_openssl.c
#am_pkcs11_testdriver_OBJECTS = pkcs11_testdriver-test_pkcs11.$(OBJEXT) \
#	pkcs11_testdriver-mock_msg.$(OBJEXT) \
#	pkcs11_testdriver-pkey_test_utils.$(OBJEXT) \
#	pkcs11_testdriver-mock_get_random.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-argv.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-otime.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-base64.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-platform.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.$(OBJEXT) \
#	$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.$(OBJEXT)
pkcs11_testdriver_OBJECTS = $(am_pkcs11_testdriver_OBJECTS)
pkcs11_testdriver_LDADD = $(LDADD)
pkcs11_testdriver_DEPENDENCIES =
pkcs11_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(pkcs11_testdriver_CFLAGS) $(CFLAGS) \
	$(pkcs11_testdriver_LDFLAGS) $(LDFLAGS) -o $@
am_pkt_testdriver_OBJECTS = pkt_testdriver-test_pkt.$(OBJEXT) \
	pkt_testdriver-mock_msg.$(OBJEXT) \
	pkt_testdriver-mock_win32_execve.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-argv.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-base64.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-crypto.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-env_set.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-otime.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-packet_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-reliable.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-run_command.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-session_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.$(OBJEXT)
pkt_testdriver_OBJECTS = $(am_pkt_testdriver_OBJECTS)
pkt_testdriver_LDADD = $(LDADD)
pkt_testdriver_DEPENDENCIES =
pkt_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(pkt_testdriver_CFLAGS) $(CFLAGS) $(pkt_testdriver_LDFLAGS) \
	$(LDFLAGS) -o $@
am_provider_testdriver_OBJECTS =  \
	provider_testdriver-test_provider.$(OBJEXT) \
	provider_testdriver-mock_msg.$(OBJEXT) \
	$(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.$(OBJEXT) \
	$(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.$(OBJEXT) \
	$(top_builddir)/src/openvpn/provider_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/provider_testdriver-base64.$(OBJEXT) \
	provider_testdriver-mock_get_random.$(OBJEXT) \
	$(top_builddir)/src/openvpn/provider_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/provider_testdriver-platform.$(OBJEXT)
provider_testdriver_OBJECTS = $(am_provider_testdriver_OBJECTS)
provider_testdriver_LDADD = $(LDADD)
provider_testdriver_DEPENDENCIES =
provider_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(provider_testdriver_CFLAGS) $(CFLAGS) \
	$(provider_testdriver_LDFLAGS) $(LDFLAGS) -o $@
am_ssl_testdriver_OBJECTS = ssl_testdriver-test_ssl.$(OBJEXT) \
	ssl_testdriver-mock_msg.$(OBJEXT) \
	ssl_testdriver-mock_management.$(OBJEXT) \
	ssl_testdriver-mock_ssl_dependencies.$(OBJEXT) \
	ssl_testdriver-mock_win32_execve.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-argv.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-base64.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/compat/ssl_testdriver-compat-strsep.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-crypto.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-env_set.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-mss.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-mtu.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-otime.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-options_util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-packet_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-run_command.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ssl_testdriver-win32-util.$(OBJEXT)
ssl_testdriver_OBJECTS = $(am_ssl_testdriver_OBJECTS)
ssl_testdriver_DEPENDENCIES =
ssl_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(ssl_testdriver_CFLAGS) $(CFLAGS) $(ssl_testdriver_LDFLAGS) \
	$(LDFLAGS) -o $@
am__tls_crypt_testdriver_SOURCES_DIST = test_tls_crypt.c mock_msg.c \
	mock_msg.h mock_win32_execve.c \
	$(top_srcdir)/src/openvpn/argv.c \
	$(top_srcdir)/src/openvpn/base64.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/env_set.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/run_command.c
am_tls_crypt_testdriver_OBJECTS =  \
	tls_crypt_testdriver-test_tls_crypt.$(OBJEXT) \
	tls_crypt_testdriver-mock_msg.$(OBJEXT) \
	tls_crypt_testdriver-mock_win32_execve.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.$(OBJEXT)
tls_crypt_testdriver_OBJECTS = $(am_tls_crypt_testdriver_OBJECTS)
tls_crypt_testdriver_LDADD = $(LDADD)
tls_crypt_testdriver_DEPENDENCIES =
tls_crypt_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tls_crypt_testdriver_CFLAGS) $(CFLAGS) \
	$(tls_crypt_testdriver_LDFLAGS) $(LDFLAGS) -o $@
am_user_pass_testdriver_OBJECTS =  \
	user_pass_testdriver-test_user_pass.$(OBJEXT) \
	user_pass_testdriver-mock_msg.$(OBJEXT) \
	$(top_builddir)/src/openvpn/user_pass_testdriver-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/user_pass_testdriver-console.$(OBJEXT) \
	$(top_builddir)/src/openvpn/user_pass_testdriver-env_set.$(OBJEXT) \
	user_pass_testdriver-mock_win32_execve.$(OBJEXT) \
	$(top_builddir)/src/openvpn/user_pass_testdriver-run_command.$(OBJEXT) \
	user_pass_testdriver-mock_get_random.$(OBJEXT) \
	$(top_builddir)/src/openvpn/user_pass_testdriver-platform.$(OBJEXT) \
	$(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.$(OBJEXT) \
	$(top_builddir)/src/openvpn/user_pass_testdriver-base64.$(OBJEXT)
user_pass_testdriver_OBJECTS = $(am_user_pass_testdriver_OBJECTS)
user_pass_testdriver_LDADD = $(LDADD)
user_pass_testdriver_DEPENDENCIES =
user_pass_testdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(user_pass_testdriver_CFLAGS) $(CFLAGS) \
	$(user_pass_testdriver_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Po \
	$(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Po \
	./$(DEPDIR)/argv_testdriver-mock_get_random.Po \
	./$(DEPDIR)/argv_testdriver-mock_msg.Po \
	./$(DEPDIR)/argv_testdriver-test_argv.Po \
	./$(DEPDIR)/auth_token_testdriver-mock_msg.Po \
	./$(DEPDIR)/auth_token_testdriver-test_auth_token.Po \
	./$(DEPDIR)/buffer_testdriver-mock_get_random.Po \
	./$(DEPDIR)/buffer_testdriver-mock_msg.Po \
	./$(DEPDIR)/buffer_testdriver-test_buffer.Po \
	./$(DEPDIR)/crypto_testdriver-mock_msg.Po \
	./$(DEPDIR)/crypto_testdriver-test_crypto.Po \
	./$(DEPDIR)/cryptoapi_testdriver-mock_get_random.Po \
	./$(DEPDIR)/cryptoapi_testdriver-mock_msg.Po \
	./$(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Po \
	./$(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Po \
	./$(DEPDIR)/misc_testdriver-mock_get_random.Po \
	./$(DEPDIR)/misc_testdriver-mock_msg.Po \
	./$(DEPDIR)/misc_testdriver-test_misc.Po \
	./$(DEPDIR)/ncp_testdriver-mock_msg.Po \
	./$(DEPDIR)/ncp_testdriver-test_ncp.Po \
	./$(DEPDIR)/networking_testdriver-mock_msg.Po \
	./$(DEPDIR)/networking_testdriver-test_networking.Po \
	./$(DEPDIR)/packet_id_testdriver-mock_get_random.Po \
	./$(DEPDIR)/packet_id_testdriver-mock_msg.Po \
	./$(DEPDIR)/packet_id_testdriver-test_packet_id.Po \
	./$(DEPDIR)/pkcs11_testdriver-mock_get_random.Po \
	./$(DEPDIR)/pkcs11_testdriver-mock_msg.Po \
	./$(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Po \
	./$(DEPDIR)/pkcs11_testdriver-test_pkcs11.Po \
	./$(DEPDIR)/pkt_testdriver-mock_msg.Po \
	./$(DEPDIR)/pkt_testdriver-mock_win32_execve.Po \
	./$(DEPDIR)/pkt_testdriver-test_pkt.Po \
	./$(DEPDIR)/provider_testdriver-mock_get_random.Po \
	./$(DEPDIR)/provider_testdriver-mock_msg.Po \
	./$(DEPDIR)/provider_testdriver-test_provider.Po \
	./$(DEPDIR)/ssl_testdriver-mock_management.Po \
	./$(DEPDIR)/ssl_testdriver-mock_msg.Po \
	./$(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Po \
	./$(DEPDIR)/ssl_testdriver-mock_win32_execve.Po \
	./$(DEPDIR)/ssl_testdriver-test_ssl.Po \
	./$(DEPDIR)/tls_crypt_testdriver-mock_msg.Po \
	./$(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Po \
	./$(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Po \
	./$(DEPDIR)/user_pass_testdriver-mock_get_random.Po \
	./$(DEPDIR)/user_pass_testdriver-mock_msg.Po \
	./$(DEPDIR)/user_pass_testdriver-mock_win32_execve.Po \
	./$(DEPDIR)/user_pass_testdriver-test_user_pass.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(argv_testdriver_SOURCES) $(auth_token_testdriver_SOURCES) \
	$(buffer_testdriver_SOURCES) $(crypto_testdriver_SOURCES) \
	$(cryptoapi_testdriver_SOURCES) $(misc_testdriver_SOURCES) \
	$(ncp_testdriver_SOURCES) $(networking_testdriver_SOURCES) \
	$(packet_id_testdriver_SOURCES) $(pkcs11_testdriver_SOURCES) \
	$(pkt_testdriver_SOURCES) $(provider_testdriver_SOURCES) \
	$(ssl_testdriver_SOURCES) $(tls_crypt_testdriver_SOURCES) \
	$(user_pass_testdriver_SOURCES)
DIST_SOURCES = $(argv_testdriver_SOURCES) \
	$(auth_token_testdriver_SOURCES) $(buffer_testdriver_SOURCES) \
	$(crypto_testdriver_SOURCES) \
	$(am__cryptoapi_testdriver_SOURCES_DIST) \
	$(misc_testdriver_SOURCES) $(ncp_testdriver_SOURCES) \
	$(am__networking_testdriver_SOURCES_DIST) \
	$(packet_id_testdriver_SOURCES) \
	$(am__pkcs11_testdriver_SOURCES_DIST) \
	$(pkt_testdriver_SOURCES) $(provider_testdriver_SOURCES) \
	$(ssl_testdriver_SOURCES) \
	$(am__tls_crypt_testdriver_SOURCES_DIST) \
	$(user_pass_testdriver_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} '/home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop/missing' autoconf
AUTOHEADER = ${SHELL} '/home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop/missing' autoheader
AUTOMAKE = ${SHELL} '/home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop/missing' automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wold-style-definition -Wstrict-prototypes -Wno-stringop-truncation -g -O2 -std=c11
CMOCKA_CFLAGS = 
CMOCKA_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DL_LIBS = -ldl
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_UNITTESTS = 
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
GIT = git
GREP = /usr/bin/grep
IFCONFIG = /usr/sbin/ifconfig
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IPROUTE = /usr/sbin/ip
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBCAPNG_CFLAGS = 
LIBCAPNG_LIBS = -lcap-ng
LIBNL_GENL_CFLAGS = -I/usr/include/libnl3
LIBNL_GENL_LIBS = -lnl-genl-3 -lnl-3
LIBOBJS = 
LIBPAM_CFLAGS = 
LIBPAM_LIBS = -lpam
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LZ4_CFLAGS = 
LZ4_LIBS = -llz4
LZO_CFLAGS = -I/usr/include/lzo
LZO_LIBS = -llzo2
MAKEINFO = ${SHELL} '/home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop/missing' makeinfo
MANIFEST_TOOL = :
MBEDTLS_CFLAGS = 
MBEDTLS_LIBS = 
MKDIR_P = /usr/bin/mkdir -p
NETSTAT = netstat
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENSSL_CFLAGS = 
OPENSSL_LIBS = -lssl -lcrypto
OPENVPN_VERSION_MAJOR = 2
OPENVPN_VERSION_MINOR = 7
OPENVPN_VERSION_PATCH = _git
OPTIONAL_CRYPTO_CFLAGS =  
OPTIONAL_CRYPTO_LIBS =  -lssl -lcrypto
OPTIONAL_DL_LIBS = -ldl
OPTIONAL_INOTIFY_CFLAGS = 
OPTIONAL_INOTIFY_LIBS = 
OPTIONAL_LIBCAPNG_CFLAGS = 
OPTIONAL_LIBCAPNG_LIBS = -lcap-ng
OPTIONAL_LIBNL_GENL_CFLAGS = -I/usr/include/libnl3
OPTIONAL_LIBNL_GENL_LIBS = -lnl-genl-3 -lnl-3
OPTIONAL_LZ4_CFLAGS = 
OPTIONAL_LZ4_LIBS = -llz4
OPTIONAL_LZO_CFLAGS = -I/usr/include/lzo
OPTIONAL_LZO_LIBS = -llzo2
OPTIONAL_PKCS11_HELPER_CFLAGS = 
OPTIONAL_PKCS11_HELPER_LIBS = 
OPTIONAL_SELINUX_LIBS = 
OPTIONAL_SYSTEMD_LIBS = 
OTOOL = 
OTOOL64 = 
P11KIT_CFLAGS = 
P11KIT_LIBS = 
P11TOOL = 
PACKAGE = openvpn
PACKAGE_BUGREPORT = openvpn-users@lists.sourceforge.net
PACKAGE_NAME = OpenVPN
PACKAGE_STRING = OpenVPN 2.7_git
PACKAGE_TARNAME = openvpn
PACKAGE_URL = 
PACKAGE_VERSION = 2.7_git
PATH_SEPARATOR = :
PKCS11_HELPER_CFLAGS = 
PKCS11_HELPER_LIBS = 
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLUGINDIR = 
PLUGIN_AUTH_PAM_CFLAGS = 
PLUGIN_AUTH_PAM_LIBS = -lpam
RANLIB = ranlib
RC = 
ROUTE = /usr/sbin/route
RST2HTML = 
RST2MAN = 
SED = /usr/bin/sed
SELINUX_LIBS = -lselinux
SET_MAKE = 
SHELL = /bin/bash
SOCKETS_LIBS =  -lnsl -lresolv
SOFTHSM2_MODULE = 
SOFTHSM2_UTIL = 
STRIP = strip
SYSTEMD_ASK_PASSWORD = /usr/bin/systemd-ask-password
SYSTEMD_UNIT_DIR = 
TAP_CFLAGS = 
TAP_WIN_COMPONENT_ID = tap0901
TAP_WIN_MIN_MAJOR = 9
TAP_WIN_MIN_MINOR = 9
TEST_CFLAGS =     -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 
TEST_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2 
TMPFILES_DIR = 
VERSION = 2.7_git
WOLFSSL_CFLAGS = 
WOLFSSL_INCLUDEDIR = 
WOLFSSL_LIBS = 
abs_builddir = /home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop/tests/unit_tests/openvpn
abs_srcdir = /home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop/tests/unit_tests/openvpn
abs_top_builddir = /home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop
abs_top_srcdir = /home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/thakshana/Desktop/THAKSHANA/thakshana-openvpn/code/openvpn_v2.6.13_develop/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libsystemd_CFLAGS = 
libsystemd_LIBS = 
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
plugindir = ${libdir}/openvpn/plugins
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sampledir = $(docdir)/sample
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
systemdunitdir = 
target_alias = 
tmpfilesdir = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
AUTOMAKE_OPTIONS = foreign
EXTRA_DIST = input
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING) Unit-Tests'
test_binaries = $(am__append_1) crypto_testdriver packet_id_testdriver \
	auth_token_testdriver ncp_testdriver misc_testdriver \
	pkt_testdriver ssl_testdriver user_pass_testdriver \
	$(am__append_2) provider_testdriver $(am__append_3) \
	$(am__append_4)
#LDADD = -lws2_32
argv_testdriver_CFLAGS = -I$(top_srcdir)/src/openvpn -I$(top_srcdir)/src/compat     -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 
argv_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2  -L$(top_srcdir)/src/openvpn -Wl,--wrap=parse_line
argv_testdriver_SOURCES = test_argv.c mock_msg.c mock_msg.h \
	mock_get_random.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/openvpn/argv.c

buffer_testdriver_CFLAGS = -I$(top_srcdir)/src/openvpn -I$(top_srcdir)/src/compat     -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 
buffer_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2  -L$(top_srcdir)/src/openvpn -Wl,--wrap=parse_line
buffer_testdriver_SOURCES = test_buffer.c mock_msg.c mock_msg.h \
	mock_get_random.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/openvpn/platform.c

crypto_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 

crypto_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2 
crypto_testdriver_SOURCES = test_crypto.c mock_msg.c mock_msg.h \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/crypto_epoch.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/mtu.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/openvpn/mss.c

ssl_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 

ssl_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2   $(OPTIONAL_CRYPTO_LIBS)
ssl_testdriver_SOURCES = test_ssl.c mock_msg.c mock_msg.h \
	mock_management.c mock_ssl_dependencies.c mock_win32_execve.c \
	$(top_srcdir)/src/openvpn/argv.c \
	$(top_srcdir)/src/openvpn/base64.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/compat/compat-strsep.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/cryptoapi.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/env_set.c \
	$(top_srcdir)/src/openvpn/mss.c \
	$(top_srcdir)/src/openvpn/mtu.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/options_util.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/run_command.c \
	$(top_srcdir)/src/openvpn/ssl_openssl.c \
	$(top_srcdir)/src/openvpn/ssl_mbedtls.c \
	$(top_srcdir)/src/openvpn/ssl_util.c \
	$(top_srcdir)/src/openvpn/ssl_verify_mbedtls.c \
	$(top_srcdir)/src/openvpn/ssl_verify_openssl.c \
	$(top_srcdir)/src/openvpn/xkey_helper.c \
	$(top_srcdir)/src/openvpn/xkey_provider.c \
	$(top_srcdir)/src/openvpn/win32-util.c

#ssl_testdriver_LDADD = -lcrypt32 -lncrypt -lfwpuclnt -liphlpapi -lws2_32
packet_id_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 

packet_id_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2 
packet_id_testdriver_SOURCES = test_packet_id.c mock_msg.c mock_msg.h \
	mock_get_random.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/reliable.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/openvpn/session_id.c

pkt_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 

pkt_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2 
pkt_testdriver_SOURCES = test_pkt.c mock_msg.c mock_msg.h mock_win32_execve.c \
	$(top_srcdir)/src/openvpn/argv.c \
	$(top_srcdir)/src/openvpn/base64.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/env_set.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/reliable.c \
	$(top_srcdir)/src/openvpn/run_command.c \
	$(top_srcdir)/src/openvpn/session_id.c \
	$(top_srcdir)/src/openvpn/ssl_pkt.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/openvpn/tls_crypt.c

tls_crypt_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 

tls_crypt_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2  \
	-Wl,--wrap=buffer_read_from_file \
	-Wl,--wrap=buffer_write_file \
	-Wl,--wrap=parse_line \
	-Wl,--wrap=rand_bytes

tls_crypt_testdriver_SOURCES = test_tls_crypt.c mock_msg.c mock_msg.h \
	mock_win32_execve.c \
	$(top_srcdir)/src/openvpn/argv.c \
	$(top_srcdir)/src/openvpn/base64.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/env_set.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/run_command.c

networking_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include  $(OPTIONAL_CRYPTO_CFLAGS)

networking_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2  -L$(top_srcdir)/src/openvpn \
	$(OPTIONAL_CRYPTO_LIBS)

networking_testdriver_SOURCES = test_networking.c mock_msg.c \
	$(top_srcdir)/src/openvpn/networking_sitnl.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c

provider_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include  $(OPTIONAL_CRYPTO_CFLAGS)

provider_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2  \
	$(OPTIONAL_CRYPTO_LIBS)

provider_testdriver_SOURCES = test_provider.c mock_msg.c \
	$(top_srcdir)/src/openvpn/xkey_helper.c \
	$(top_srcdir)/src/openvpn/xkey_provider.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/base64.c \
	mock_get_random.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/openvpn/platform.c

#cryptoapi_testdriver_CFLAGS = \
#	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
#	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include  $(OPTIONAL_CRYPTO_CFLAGS)

#cryptoapi_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2  \
#	$(OPTIONAL_CRYPTO_LIBS) -lcrypt32 -lncrypt

#cryptoapi_testdriver_SOURCES = test_cryptoapi.c mock_msg.c \
#	pkey_test_utils.c cert_data.h \
#	$(top_srcdir)/src/openvpn/xkey_helper.c \
#	$(top_srcdir)/src/openvpn/xkey_provider.c \
#	$(top_srcdir)/src/openvpn/buffer.c \
#	$(top_srcdir)/src/openvpn/base64.c \
#	$(top_srcdir)/src/openvpn/platform.c \
#	mock_get_random.c \
#	$(top_srcdir)/src/openvpn/win32-util.c

#pkcs11_testdriver_CFLAGS = \
#	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
#	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include  $(OPTIONAL_CRYPTO_CFLAGS)

#pkcs11_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2  \
#	$(OPTIONAL_CRYPTO_LIBS)

#pkcs11_testdriver_SOURCES = test_pkcs11.c mock_msg.c \
#	pkey_test_utils.c cert_data.h mock_get_random.c \
#	$(top_srcdir)/src/openvpn/xkey_helper.c \
#	$(top_srcdir)/src/openvpn/xkey_provider.c \
#	$(top_srcdir)/src/openvpn/argv.c \
#	$(top_srcdir)/src/openvpn/env_set.c \
#	$(top_srcdir)/src/openvpn/buffer.c \
#	$(top_srcdir)/src/openvpn/otime.c \
#	$(top_srcdir)/src/openvpn/run_command.c \
#	$(top_srcdir)/src/openvpn/base64.c \
#	$(top_srcdir)/src/openvpn/platform.c \
#	$(top_srcdir)/src/openvpn/pkcs11.c \
#	$(top_srcdir)/src/openvpn/pkcs11_openssl.c

auth_token_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include  $(OPTIONAL_CRYPTO_CFLAGS)

auth_token_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2  \
	$(OPTIONAL_CRYPTO_LIBS)

auth_token_testdriver_SOURCES = test_auth_token.c mock_msg.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/openvpn/base64.c

user_pass_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 

user_pass_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2 
user_pass_testdriver_SOURCES = test_user_pass.c mock_msg.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/console.c \
	$(top_srcdir)/src/openvpn/env_set.c \
	mock_win32_execve.c \
	$(top_srcdir)/src/openvpn/run_command.c \
	mock_get_random.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/openvpn/base64.c

ncp_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	    -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include  $(OPTIONAL_CRYPTO_CFLAGS)

ncp_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2  \
	$(OPTIONAL_CRYPTO_LIBS)

ncp_testdriver_SOURCES = test_ncp.c mock_msg.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/compat/compat-strsep.c \
	$(top_srcdir)/src/openvpn/ssl_util.c

misc_testdriver_CFLAGS = \
	-I$(top_srcdir)/include -I$(top_srcdir)/src/compat -I$(top_srcdir)/src/openvpn \
	-DSOURCEDIR=\"$(top_srcdir)\"     -I/usr/include/libnl3 -I/usr/include/lzo -I$(top_srcdir)/include 

misc_testdriver_LDFLAGS =  -lssl -lcrypto  -lcap-ng -lnl-genl-3 -lnl-3 -llzo2 
misc_testdriver_SOURCES = test_misc.c mock_msg.c \
	mock_get_random.c \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/options_util.c \
	$(top_srcdir)/src/openvpn/ssl_util.c \
	$(top_srcdir)/src/openvpn/win32-util.c \
	$(top_srcdir)/src/openvpn/platform.c \
	$(top_srcdir)/src/openvpn/list.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/unit_tests/openvpn/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/unit_tests/openvpn/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
$(top_builddir)/src/openvpn/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/openvpn
	@: > $(top_builddir)/src/openvpn/$(am__dirstamp)
$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/openvpn/$(DEPDIR)
	@: > $(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/argv_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/argv_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/argv_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/argv_testdriver-argv.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

argv_testdriver$(EXEEXT): $(argv_testdriver_OBJECTS) $(argv_testdriver_DEPENDENCIES) $(EXTRA_argv_testdriver_DEPENDENCIES) 
	@rm -f argv_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(argv_testdriver_LINK) $(argv_testdriver_OBJECTS) $(argv_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/auth_token_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/auth_token_testdriver-crypto.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/auth_token_testdriver-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/auth_token_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/auth_token_testdriver-base64.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

auth_token_testdriver$(EXEEXT): $(auth_token_testdriver_OBJECTS) $(auth_token_testdriver_DEPENDENCIES) $(EXTRA_auth_token_testdriver_DEPENDENCIES) 
	@rm -f auth_token_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(auth_token_testdriver_LINK) $(auth_token_testdriver_OBJECTS) $(auth_token_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/buffer_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/buffer_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

buffer_testdriver$(EXEEXT): $(buffer_testdriver_OBJECTS) $(buffer_testdriver_DEPENDENCIES) $(EXTRA_buffer_testdriver_DEPENDENCIES) 
	@rm -f buffer_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(buffer_testdriver_LINK) $(buffer_testdriver_OBJECTS) $(buffer_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/crypto_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-crypto.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-packet_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-mtu.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/crypto_testdriver-mss.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

crypto_testdriver$(EXEEXT): $(crypto_testdriver_OBJECTS) $(crypto_testdriver_DEPENDENCIES) $(EXTRA_crypto_testdriver_DEPENDENCIES) 
	@rm -f crypto_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(crypto_testdriver_LINK) $(crypto_testdriver_OBJECTS) $(crypto_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

cryptoapi_testdriver$(EXEEXT): $(cryptoapi_testdriver_OBJECTS) $(cryptoapi_testdriver_DEPENDENCIES) $(EXTRA_cryptoapi_testdriver_DEPENDENCIES) 
	@rm -f cryptoapi_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(cryptoapi_testdriver_LINK) $(cryptoapi_testdriver_OBJECTS) $(cryptoapi_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/misc_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/misc_testdriver-options_util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/misc_testdriver-ssl_util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/misc_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/misc_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/misc_testdriver-list.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

misc_testdriver$(EXEEXT): $(misc_testdriver_OBJECTS) $(misc_testdriver_DEPENDENCIES) $(EXTRA_misc_testdriver_DEPENDENCIES) 
	@rm -f misc_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(misc_testdriver_LINK) $(misc_testdriver_OBJECTS) $(misc_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/ncp_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ncp_testdriver-crypto.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ncp_testdriver-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ncp_testdriver-packet_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ncp_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ncp_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/compat/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/compat
	@: > $(top_builddir)/src/compat/$(am__dirstamp)
$(top_builddir)/src/compat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/compat/$(DEPDIR)
	@: > $(top_builddir)/src/compat/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/compat/ncp_testdriver-compat-strsep.$(OBJEXT):  \
	$(top_builddir)/src/compat/$(am__dirstamp) \
	$(top_builddir)/src/compat/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

ncp_testdriver$(EXEEXT): $(ncp_testdriver_OBJECTS) $(ncp_testdriver_DEPENDENCIES) $(EXTRA_ncp_testdriver_DEPENDENCIES) 
	@rm -f ncp_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(ncp_testdriver_LINK) $(ncp_testdriver_OBJECTS) $(ncp_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/networking_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/networking_testdriver-crypto.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/networking_testdriver-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/networking_testdriver-packet_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/networking_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

networking_testdriver$(EXEEXT): $(networking_testdriver_OBJECTS) $(networking_testdriver_DEPENDENCIES) $(EXTRA_networking_testdriver_DEPENDENCIES) 
	@rm -f networking_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(networking_testdriver_LINK) $(networking_testdriver_OBJECTS) $(networking_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/packet_id_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/packet_id_testdriver-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/packet_id_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/packet_id_testdriver-reliable.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/packet_id_testdriver-session_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

packet_id_testdriver$(EXEEXT): $(packet_id_testdriver_OBJECTS) $(packet_id_testdriver_DEPENDENCIES) $(EXTRA_packet_id_testdriver_DEPENDENCIES) 
	@rm -f packet_id_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(packet_id_testdriver_LINK) $(packet_id_testdriver_OBJECTS) $(packet_id_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-argv.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-base64.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

pkcs11_testdriver$(EXEEXT): $(pkcs11_testdriver_OBJECTS) $(pkcs11_testdriver_DEPENDENCIES) $(EXTRA_pkcs11_testdriver_DEPENDENCIES) 
	@rm -f pkcs11_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(pkcs11_testdriver_LINK) $(pkcs11_testdriver_OBJECTS) $(pkcs11_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/pkt_testdriver-argv.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-base64.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-crypto.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-env_set.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-packet_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-reliable.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-run_command.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-session_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

pkt_testdriver$(EXEEXT): $(pkt_testdriver_OBJECTS) $(pkt_testdriver_DEPENDENCIES) $(EXTRA_pkt_testdriver_DEPENDENCIES) 
	@rm -f pkt_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(pkt_testdriver_LINK) $(pkt_testdriver_OBJECTS) $(pkt_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/provider_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/provider_testdriver-base64.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/provider_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/provider_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

provider_testdriver$(EXEEXT): $(provider_testdriver_OBJECTS) $(provider_testdriver_DEPENDENCIES) $(EXTRA_provider_testdriver_DEPENDENCIES) 
	@rm -f provider_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(provider_testdriver_LINK) $(provider_testdriver_OBJECTS) $(provider_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/ssl_testdriver-argv.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-base64.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/compat/ssl_testdriver-compat-strsep.$(OBJEXT):  \
	$(top_builddir)/src/compat/$(am__dirstamp) \
	$(top_builddir)/src/compat/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-crypto.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-env_set.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-mss.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-mtu.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-options_util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-packet_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-run_command.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ssl_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

ssl_testdriver$(EXEEXT): $(ssl_testdriver_OBJECTS) $(ssl_testdriver_DEPENDENCIES) $(EXTRA_ssl_testdriver_DEPENDENCIES) 
	@rm -f ssl_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(ssl_testdriver_LINK) $(ssl_testdriver_OBJECTS) $(ssl_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

tls_crypt_testdriver$(EXEEXT): $(tls_crypt_testdriver_OBJECTS) $(tls_crypt_testdriver_DEPENDENCIES) $(EXTRA_tls_crypt_testdriver_DEPENDENCIES) 
	@rm -f tls_crypt_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(tls_crypt_testdriver_LINK) $(tls_crypt_testdriver_OBJECTS) $(tls_crypt_testdriver_LDADD) $(LIBS)
$(top_builddir)/src/openvpn/user_pass_testdriver-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/user_pass_testdriver-console.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/user_pass_testdriver-env_set.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/user_pass_testdriver-run_command.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/user_pass_testdriver-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/user_pass_testdriver-base64.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

user_pass_testdriver$(EXEEXT): $(user_pass_testdriver_OBJECTS) $(user_pass_testdriver_DEPENDENCIES) $(EXTRA_user_pass_testdriver_DEPENDENCIES) 
	@rm -f user_pass_testdriver$(EXEEXT)
	$(AM_V_CCLD)$(user_pass_testdriver_LINK) $(user_pass_testdriver_OBJECTS) $(user_pass_testdriver_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f $(top_builddir)/src/compat/*.$(OBJEXT)
	-rm -f $(top_builddir)/src/openvpn/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Po # am--include-marker
include $(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Po # am--include-marker
include ./$(DEPDIR)/argv_testdriver-mock_get_random.Po # am--include-marker
include ./$(DEPDIR)/argv_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/argv_testdriver-test_argv.Po # am--include-marker
include ./$(DEPDIR)/auth_token_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/auth_token_testdriver-test_auth_token.Po # am--include-marker
include ./$(DEPDIR)/buffer_testdriver-mock_get_random.Po # am--include-marker
include ./$(DEPDIR)/buffer_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/buffer_testdriver-test_buffer.Po # am--include-marker
include ./$(DEPDIR)/crypto_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/crypto_testdriver-test_crypto.Po # am--include-marker
include ./$(DEPDIR)/cryptoapi_testdriver-mock_get_random.Po # am--include-marker
include ./$(DEPDIR)/cryptoapi_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Po # am--include-marker
include ./$(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Po # am--include-marker
include ./$(DEPDIR)/misc_testdriver-mock_get_random.Po # am--include-marker
include ./$(DEPDIR)/misc_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/misc_testdriver-test_misc.Po # am--include-marker
include ./$(DEPDIR)/ncp_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/ncp_testdriver-test_ncp.Po # am--include-marker
include ./$(DEPDIR)/networking_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/networking_testdriver-test_networking.Po # am--include-marker
include ./$(DEPDIR)/packet_id_testdriver-mock_get_random.Po # am--include-marker
include ./$(DEPDIR)/packet_id_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/packet_id_testdriver-test_packet_id.Po # am--include-marker
include ./$(DEPDIR)/pkcs11_testdriver-mock_get_random.Po # am--include-marker
include ./$(DEPDIR)/pkcs11_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Po # am--include-marker
include ./$(DEPDIR)/pkcs11_testdriver-test_pkcs11.Po # am--include-marker
include ./$(DEPDIR)/pkt_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/pkt_testdriver-mock_win32_execve.Po # am--include-marker
include ./$(DEPDIR)/pkt_testdriver-test_pkt.Po # am--include-marker
include ./$(DEPDIR)/provider_testdriver-mock_get_random.Po # am--include-marker
include ./$(DEPDIR)/provider_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/provider_testdriver-test_provider.Po # am--include-marker
include ./$(DEPDIR)/ssl_testdriver-mock_management.Po # am--include-marker
include ./$(DEPDIR)/ssl_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Po # am--include-marker
include ./$(DEPDIR)/ssl_testdriver-mock_win32_execve.Po # am--include-marker
include ./$(DEPDIR)/ssl_testdriver-test_ssl.Po # am--include-marker
include ./$(DEPDIR)/tls_crypt_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Po # am--include-marker
include ./$(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Po # am--include-marker
include ./$(DEPDIR)/user_pass_testdriver-mock_get_random.Po # am--include-marker
include ./$(DEPDIR)/user_pass_testdriver-mock_msg.Po # am--include-marker
include ./$(DEPDIR)/user_pass_testdriver-mock_win32_execve.Po # am--include-marker
include ./$(DEPDIR)/user_pass_testdriver-test_user_pass.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

argv_testdriver-test_argv.o: test_argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT argv_testdriver-test_argv.o -MD -MP -MF $(DEPDIR)/argv_testdriver-test_argv.Tpo -c -o argv_testdriver-test_argv.o `test -f 'test_argv.c' || echo '$(srcdir)/'`test_argv.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/argv_testdriver-test_argv.Tpo $(DEPDIR)/argv_testdriver-test_argv.Po
#	$(AM_V_CC)source='test_argv.c' object='argv_testdriver-test_argv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o argv_testdriver-test_argv.o `test -f 'test_argv.c' || echo '$(srcdir)/'`test_argv.c

argv_testdriver-test_argv.obj: test_argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT argv_testdriver-test_argv.obj -MD -MP -MF $(DEPDIR)/argv_testdriver-test_argv.Tpo -c -o argv_testdriver-test_argv.obj `if test -f 'test_argv.c'; then $(CYGPATH_W) 'test_argv.c'; else $(CYGPATH_W) '$(srcdir)/test_argv.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/argv_testdriver-test_argv.Tpo $(DEPDIR)/argv_testdriver-test_argv.Po
#	$(AM_V_CC)source='test_argv.c' object='argv_testdriver-test_argv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o argv_testdriver-test_argv.obj `if test -f 'test_argv.c'; then $(CYGPATH_W) 'test_argv.c'; else $(CYGPATH_W) '$(srcdir)/test_argv.c'; fi`

argv_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT argv_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/argv_testdriver-mock_msg.Tpo -c -o argv_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/argv_testdriver-mock_msg.Tpo $(DEPDIR)/argv_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='argv_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o argv_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

argv_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT argv_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/argv_testdriver-mock_msg.Tpo -c -o argv_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/argv_testdriver-mock_msg.Tpo $(DEPDIR)/argv_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='argv_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o argv_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

argv_testdriver-mock_get_random.o: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT argv_testdriver-mock_get_random.o -MD -MP -MF $(DEPDIR)/argv_testdriver-mock_get_random.Tpo -c -o argv_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/argv_testdriver-mock_get_random.Tpo $(DEPDIR)/argv_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='argv_testdriver-mock_get_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o argv_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c

argv_testdriver-mock_get_random.obj: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT argv_testdriver-mock_get_random.obj -MD -MP -MF $(DEPDIR)/argv_testdriver-mock_get_random.Tpo -c -o argv_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/argv_testdriver-mock_get_random.Tpo $(DEPDIR)/argv_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='argv_testdriver-mock_get_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o argv_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`

$(top_builddir)/src/openvpn/argv_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/argv_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/argv_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/argv_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/argv_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/argv_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/argv_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/argv_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/argv_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/argv_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/argv_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/argv_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/argv_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/argv_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/argv_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/argv_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/argv_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/argv_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/argv_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/argv_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/argv_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/argv_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/argv_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/argv_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/argv_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/argv_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/argv_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/argv_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/argv_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/argv_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/openvpn/argv_testdriver-argv.o: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/argv_testdriver-argv.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/argv_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/argv_testdriver-argv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/argv_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c

$(top_builddir)/src/openvpn/argv_testdriver-argv.obj: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/argv_testdriver-argv.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/argv_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/argv_testdriver-argv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argv_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/argv_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`

auth_token_testdriver-test_auth_token.o: test_auth_token.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT auth_token_testdriver-test_auth_token.o -MD -MP -MF $(DEPDIR)/auth_token_testdriver-test_auth_token.Tpo -c -o auth_token_testdriver-test_auth_token.o `test -f 'test_auth_token.c' || echo '$(srcdir)/'`test_auth_token.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/auth_token_testdriver-test_auth_token.Tpo $(DEPDIR)/auth_token_testdriver-test_auth_token.Po
#	$(AM_V_CC)source='test_auth_token.c' object='auth_token_testdriver-test_auth_token.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o auth_token_testdriver-test_auth_token.o `test -f 'test_auth_token.c' || echo '$(srcdir)/'`test_auth_token.c

auth_token_testdriver-test_auth_token.obj: test_auth_token.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT auth_token_testdriver-test_auth_token.obj -MD -MP -MF $(DEPDIR)/auth_token_testdriver-test_auth_token.Tpo -c -o auth_token_testdriver-test_auth_token.obj `if test -f 'test_auth_token.c'; then $(CYGPATH_W) 'test_auth_token.c'; else $(CYGPATH_W) '$(srcdir)/test_auth_token.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auth_token_testdriver-test_auth_token.Tpo $(DEPDIR)/auth_token_testdriver-test_auth_token.Po
#	$(AM_V_CC)source='test_auth_token.c' object='auth_token_testdriver-test_auth_token.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o auth_token_testdriver-test_auth_token.obj `if test -f 'test_auth_token.c'; then $(CYGPATH_W) 'test_auth_token.c'; else $(CYGPATH_W) '$(srcdir)/test_auth_token.c'; fi`

auth_token_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT auth_token_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/auth_token_testdriver-mock_msg.Tpo -c -o auth_token_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/auth_token_testdriver-mock_msg.Tpo $(DEPDIR)/auth_token_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='auth_token_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o auth_token_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

auth_token_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT auth_token_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/auth_token_testdriver-mock_msg.Tpo -c -o auth_token_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auth_token_testdriver-mock_msg.Tpo $(DEPDIR)/auth_token_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='auth_token_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o auth_token_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

$(top_builddir)/src/openvpn/auth_token_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/auth_token_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/auth_token_testdriver-crypto.o: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-crypto.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c

$(top_builddir)/src/openvpn/auth_token_testdriver-crypto.obj: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-crypto.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`

$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.o: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c

$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.obj: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.o: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c

$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.obj: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`

$(top_builddir)/src/openvpn/auth_token_testdriver-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/auth_token_testdriver-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.o: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c

$(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.obj: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`

$(top_builddir)/src/openvpn/auth_token_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/auth_token_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/openvpn/auth_token_testdriver-base64.o: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-base64.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c

$(top_builddir)/src/openvpn/auth_token_testdriver-base64.obj: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/auth_token_testdriver-base64.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/auth_token_testdriver-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(auth_token_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/auth_token_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`

buffer_testdriver-test_buffer.o: test_buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT buffer_testdriver-test_buffer.o -MD -MP -MF $(DEPDIR)/buffer_testdriver-test_buffer.Tpo -c -o buffer_testdriver-test_buffer.o `test -f 'test_buffer.c' || echo '$(srcdir)/'`test_buffer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/buffer_testdriver-test_buffer.Tpo $(DEPDIR)/buffer_testdriver-test_buffer.Po
#	$(AM_V_CC)source='test_buffer.c' object='buffer_testdriver-test_buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o buffer_testdriver-test_buffer.o `test -f 'test_buffer.c' || echo '$(srcdir)/'`test_buffer.c

buffer_testdriver-test_buffer.obj: test_buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT buffer_testdriver-test_buffer.obj -MD -MP -MF $(DEPDIR)/buffer_testdriver-test_buffer.Tpo -c -o buffer_testdriver-test_buffer.obj `if test -f 'test_buffer.c'; then $(CYGPATH_W) 'test_buffer.c'; else $(CYGPATH_W) '$(srcdir)/test_buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/buffer_testdriver-test_buffer.Tpo $(DEPDIR)/buffer_testdriver-test_buffer.Po
#	$(AM_V_CC)source='test_buffer.c' object='buffer_testdriver-test_buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o buffer_testdriver-test_buffer.obj `if test -f 'test_buffer.c'; then $(CYGPATH_W) 'test_buffer.c'; else $(CYGPATH_W) '$(srcdir)/test_buffer.c'; fi`

buffer_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT buffer_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/buffer_testdriver-mock_msg.Tpo -c -o buffer_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/buffer_testdriver-mock_msg.Tpo $(DEPDIR)/buffer_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='buffer_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o buffer_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

buffer_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT buffer_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/buffer_testdriver-mock_msg.Tpo -c -o buffer_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/buffer_testdriver-mock_msg.Tpo $(DEPDIR)/buffer_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='buffer_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o buffer_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

buffer_testdriver-mock_get_random.o: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT buffer_testdriver-mock_get_random.o -MD -MP -MF $(DEPDIR)/buffer_testdriver-mock_get_random.Tpo -c -o buffer_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/buffer_testdriver-mock_get_random.Tpo $(DEPDIR)/buffer_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='buffer_testdriver-mock_get_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o buffer_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c

buffer_testdriver-mock_get_random.obj: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT buffer_testdriver-mock_get_random.obj -MD -MP -MF $(DEPDIR)/buffer_testdriver-mock_get_random.Tpo -c -o buffer_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/buffer_testdriver-mock_get_random.Tpo $(DEPDIR)/buffer_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='buffer_testdriver-mock_get_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o buffer_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`

$(top_builddir)/src/openvpn/buffer_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/buffer_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/buffer_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/buffer_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/buffer_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/buffer_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/buffer_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/buffer_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/buffer_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/buffer_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/openvpn/buffer_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/buffer_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/buffer_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/buffer_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/buffer_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/buffer_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/buffer_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/buffer_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/buffer_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/buffer_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

crypto_testdriver-test_crypto.o: test_crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT crypto_testdriver-test_crypto.o -MD -MP -MF $(DEPDIR)/crypto_testdriver-test_crypto.Tpo -c -o crypto_testdriver-test_crypto.o `test -f 'test_crypto.c' || echo '$(srcdir)/'`test_crypto.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/crypto_testdriver-test_crypto.Tpo $(DEPDIR)/crypto_testdriver-test_crypto.Po
#	$(AM_V_CC)source='test_crypto.c' object='crypto_testdriver-test_crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o crypto_testdriver-test_crypto.o `test -f 'test_crypto.c' || echo '$(srcdir)/'`test_crypto.c

crypto_testdriver-test_crypto.obj: test_crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT crypto_testdriver-test_crypto.obj -MD -MP -MF $(DEPDIR)/crypto_testdriver-test_crypto.Tpo -c -o crypto_testdriver-test_crypto.obj `if test -f 'test_crypto.c'; then $(CYGPATH_W) 'test_crypto.c'; else $(CYGPATH_W) '$(srcdir)/test_crypto.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/crypto_testdriver-test_crypto.Tpo $(DEPDIR)/crypto_testdriver-test_crypto.Po
#	$(AM_V_CC)source='test_crypto.c' object='crypto_testdriver-test_crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o crypto_testdriver-test_crypto.obj `if test -f 'test_crypto.c'; then $(CYGPATH_W) 'test_crypto.c'; else $(CYGPATH_W) '$(srcdir)/test_crypto.c'; fi`

crypto_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT crypto_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/crypto_testdriver-mock_msg.Tpo -c -o crypto_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/crypto_testdriver-mock_msg.Tpo $(DEPDIR)/crypto_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='crypto_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o crypto_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

crypto_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT crypto_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/crypto_testdriver-mock_msg.Tpo -c -o crypto_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/crypto_testdriver-mock_msg.Tpo $(DEPDIR)/crypto_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='crypto_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o crypto_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/crypto_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-crypto.o: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-crypto.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c

$(top_builddir)/src/openvpn/crypto_testdriver-crypto.obj: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-crypto.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.o: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c

$(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.obj: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.o: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c

$(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.obj: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.o: $(top_builddir)/src/openvpn/crypto_epoch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.o `test -f '$(top_builddir)/src/openvpn/crypto_epoch.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_epoch.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_epoch.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.o `test -f '$(top_builddir)/src/openvpn/crypto_epoch.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_epoch.c

$(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.obj: $(top_builddir)/src/openvpn/crypto_epoch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.obj `if test -f '$(top_builddir)/src/openvpn/crypto_epoch.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_epoch.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_epoch.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_epoch.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-crypto_epoch.obj `if test -f '$(top_builddir)/src/openvpn/crypto_epoch.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_epoch.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_epoch.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/crypto_testdriver-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-packet_id.o: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-packet_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c

$(top_builddir)/src/openvpn/crypto_testdriver-packet_id.obj: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-packet_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/crypto_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-mtu.o: $(top_builddir)/src/openvpn/mtu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-mtu.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-mtu.o `test -f '$(top_builddir)/src/openvpn/mtu.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/mtu.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/mtu.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-mtu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-mtu.o `test -f '$(top_builddir)/src/openvpn/mtu.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/mtu.c

$(top_builddir)/src/openvpn/crypto_testdriver-mtu.obj: $(top_builddir)/src/openvpn/mtu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-mtu.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-mtu.obj `if test -f '$(top_builddir)/src/openvpn/mtu.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/mtu.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/mtu.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/mtu.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-mtu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-mtu.obj `if test -f '$(top_builddir)/src/openvpn/mtu.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/mtu.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/mtu.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/crypto_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/openvpn/crypto_testdriver-mss.o: $(top_builddir)/src/openvpn/mss.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-mss.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-mss.o `test -f '$(top_builddir)/src/openvpn/mss.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/mss.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/mss.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-mss.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-mss.o `test -f '$(top_builddir)/src/openvpn/mss.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/mss.c

$(top_builddir)/src/openvpn/crypto_testdriver-mss.obj: $(top_builddir)/src/openvpn/mss.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/crypto_testdriver-mss.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Tpo -c -o $(top_builddir)/src/openvpn/crypto_testdriver-mss.obj `if test -f '$(top_builddir)/src/openvpn/mss.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/mss.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/mss.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/mss.c' object='$(top_builddir)/src/openvpn/crypto_testdriver-mss.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(crypto_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/crypto_testdriver-mss.obj `if test -f '$(top_builddir)/src/openvpn/mss.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/mss.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/mss.c'; fi`

cryptoapi_testdriver-test_cryptoapi.o: test_cryptoapi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT cryptoapi_testdriver-test_cryptoapi.o -MD -MP -MF $(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Tpo -c -o cryptoapi_testdriver-test_cryptoapi.o `test -f 'test_cryptoapi.c' || echo '$(srcdir)/'`test_cryptoapi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Tpo $(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Po
#	$(AM_V_CC)source='test_cryptoapi.c' object='cryptoapi_testdriver-test_cryptoapi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o cryptoapi_testdriver-test_cryptoapi.o `test -f 'test_cryptoapi.c' || echo '$(srcdir)/'`test_cryptoapi.c

cryptoapi_testdriver-test_cryptoapi.obj: test_cryptoapi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT cryptoapi_testdriver-test_cryptoapi.obj -MD -MP -MF $(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Tpo -c -o cryptoapi_testdriver-test_cryptoapi.obj `if test -f 'test_cryptoapi.c'; then $(CYGPATH_W) 'test_cryptoapi.c'; else $(CYGPATH_W) '$(srcdir)/test_cryptoapi.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Tpo $(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Po
#	$(AM_V_CC)source='test_cryptoapi.c' object='cryptoapi_testdriver-test_cryptoapi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o cryptoapi_testdriver-test_cryptoapi.obj `if test -f 'test_cryptoapi.c'; then $(CYGPATH_W) 'test_cryptoapi.c'; else $(CYGPATH_W) '$(srcdir)/test_cryptoapi.c'; fi`

cryptoapi_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT cryptoapi_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/cryptoapi_testdriver-mock_msg.Tpo -c -o cryptoapi_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cryptoapi_testdriver-mock_msg.Tpo $(DEPDIR)/cryptoapi_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='cryptoapi_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o cryptoapi_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

cryptoapi_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT cryptoapi_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/cryptoapi_testdriver-mock_msg.Tpo -c -o cryptoapi_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cryptoapi_testdriver-mock_msg.Tpo $(DEPDIR)/cryptoapi_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='cryptoapi_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o cryptoapi_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

cryptoapi_testdriver-pkey_test_utils.o: pkey_test_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT cryptoapi_testdriver-pkey_test_utils.o -MD -MP -MF $(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Tpo -c -o cryptoapi_testdriver-pkey_test_utils.o `test -f 'pkey_test_utils.c' || echo '$(srcdir)/'`pkey_test_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Tpo $(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Po
#	$(AM_V_CC)source='pkey_test_utils.c' object='cryptoapi_testdriver-pkey_test_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o cryptoapi_testdriver-pkey_test_utils.o `test -f 'pkey_test_utils.c' || echo '$(srcdir)/'`pkey_test_utils.c

cryptoapi_testdriver-pkey_test_utils.obj: pkey_test_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT cryptoapi_testdriver-pkey_test_utils.obj -MD -MP -MF $(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Tpo -c -o cryptoapi_testdriver-pkey_test_utils.obj `if test -f 'pkey_test_utils.c'; then $(CYGPATH_W) 'pkey_test_utils.c'; else $(CYGPATH_W) '$(srcdir)/pkey_test_utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Tpo $(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Po
#	$(AM_V_CC)source='pkey_test_utils.c' object='cryptoapi_testdriver-pkey_test_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o cryptoapi_testdriver-pkey_test_utils.obj `if test -f 'pkey_test_utils.c'; then $(CYGPATH_W) 'pkey_test_utils.c'; else $(CYGPATH_W) '$(srcdir)/pkey_test_utils.c'; fi`

$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.o: $(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.o `test -f '$(top_builddir)/src/openvpn/xkey_helper.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_helper.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.o `test -f '$(top_builddir)/src/openvpn/xkey_helper.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_helper.c

$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.obj: $(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.obj `if test -f '$(top_builddir)/src/openvpn/xkey_helper.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_helper.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_helper.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_helper.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_helper.obj `if test -f '$(top_builddir)/src/openvpn/xkey_helper.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_helper.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_helper.c'; fi`

$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.o: $(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.o `test -f '$(top_builddir)/src/openvpn/xkey_provider.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_provider.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.o `test -f '$(top_builddir)/src/openvpn/xkey_provider.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_provider.c

$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.obj: $(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.obj `if test -f '$(top_builddir)/src/openvpn/xkey_provider.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_provider.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_provider.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_provider.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-xkey_provider.obj `if test -f '$(top_builddir)/src/openvpn/xkey_provider.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_provider.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_provider.c'; fi`

$(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.o: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c

$(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.obj: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`

$(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

cryptoapi_testdriver-mock_get_random.o: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT cryptoapi_testdriver-mock_get_random.o -MD -MP -MF $(DEPDIR)/cryptoapi_testdriver-mock_get_random.Tpo -c -o cryptoapi_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cryptoapi_testdriver-mock_get_random.Tpo $(DEPDIR)/cryptoapi_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='cryptoapi_testdriver-mock_get_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o cryptoapi_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c

cryptoapi_testdriver-mock_get_random.obj: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT cryptoapi_testdriver-mock_get_random.obj -MD -MP -MF $(DEPDIR)/cryptoapi_testdriver-mock_get_random.Tpo -c -o cryptoapi_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cryptoapi_testdriver-mock_get_random.Tpo $(DEPDIR)/cryptoapi_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='cryptoapi_testdriver-mock_get_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o cryptoapi_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`

$(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cryptoapi_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/cryptoapi_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

misc_testdriver-test_misc.o: test_misc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT misc_testdriver-test_misc.o -MD -MP -MF $(DEPDIR)/misc_testdriver-test_misc.Tpo -c -o misc_testdriver-test_misc.o `test -f 'test_misc.c' || echo '$(srcdir)/'`test_misc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/misc_testdriver-test_misc.Tpo $(DEPDIR)/misc_testdriver-test_misc.Po
#	$(AM_V_CC)source='test_misc.c' object='misc_testdriver-test_misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o misc_testdriver-test_misc.o `test -f 'test_misc.c' || echo '$(srcdir)/'`test_misc.c

misc_testdriver-test_misc.obj: test_misc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT misc_testdriver-test_misc.obj -MD -MP -MF $(DEPDIR)/misc_testdriver-test_misc.Tpo -c -o misc_testdriver-test_misc.obj `if test -f 'test_misc.c'; then $(CYGPATH_W) 'test_misc.c'; else $(CYGPATH_W) '$(srcdir)/test_misc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/misc_testdriver-test_misc.Tpo $(DEPDIR)/misc_testdriver-test_misc.Po
#	$(AM_V_CC)source='test_misc.c' object='misc_testdriver-test_misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o misc_testdriver-test_misc.obj `if test -f 'test_misc.c'; then $(CYGPATH_W) 'test_misc.c'; else $(CYGPATH_W) '$(srcdir)/test_misc.c'; fi`

misc_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT misc_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/misc_testdriver-mock_msg.Tpo -c -o misc_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/misc_testdriver-mock_msg.Tpo $(DEPDIR)/misc_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='misc_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o misc_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

misc_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT misc_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/misc_testdriver-mock_msg.Tpo -c -o misc_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/misc_testdriver-mock_msg.Tpo $(DEPDIR)/misc_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='misc_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o misc_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

misc_testdriver-mock_get_random.o: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT misc_testdriver-mock_get_random.o -MD -MP -MF $(DEPDIR)/misc_testdriver-mock_get_random.Tpo -c -o misc_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/misc_testdriver-mock_get_random.Tpo $(DEPDIR)/misc_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='misc_testdriver-mock_get_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o misc_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c

misc_testdriver-mock_get_random.obj: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT misc_testdriver-mock_get_random.obj -MD -MP -MF $(DEPDIR)/misc_testdriver-mock_get_random.Tpo -c -o misc_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/misc_testdriver-mock_get_random.Tpo $(DEPDIR)/misc_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='misc_testdriver-mock_get_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o misc_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`

$(top_builddir)/src/openvpn/misc_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/misc_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/misc_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/misc_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/misc_testdriver-options_util.o: $(top_builddir)/src/openvpn/options_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-options_util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-options_util.o `test -f '$(top_builddir)/src/openvpn/options_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/options_util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/options_util.c' object='$(top_builddir)/src/openvpn/misc_testdriver-options_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-options_util.o `test -f '$(top_builddir)/src/openvpn/options_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/options_util.c

$(top_builddir)/src/openvpn/misc_testdriver-options_util.obj: $(top_builddir)/src/openvpn/options_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-options_util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-options_util.obj `if test -f '$(top_builddir)/src/openvpn/options_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/options_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/options_util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/options_util.c' object='$(top_builddir)/src/openvpn/misc_testdriver-options_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-options_util.obj `if test -f '$(top_builddir)/src/openvpn/options_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/options_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/options_util.c'; fi`

$(top_builddir)/src/openvpn/misc_testdriver-ssl_util.o: $(top_builddir)/src/openvpn/ssl_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-ssl_util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-ssl_util.o `test -f '$(top_builddir)/src/openvpn/ssl_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_util.c' object='$(top_builddir)/src/openvpn/misc_testdriver-ssl_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-ssl_util.o `test -f '$(top_builddir)/src/openvpn/ssl_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_util.c

$(top_builddir)/src/openvpn/misc_testdriver-ssl_util.obj: $(top_builddir)/src/openvpn/ssl_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-ssl_util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-ssl_util.obj `if test -f '$(top_builddir)/src/openvpn/ssl_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_util.c' object='$(top_builddir)/src/openvpn/misc_testdriver-ssl_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-ssl_util.obj `if test -f '$(top_builddir)/src/openvpn/ssl_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_util.c'; fi`

$(top_builddir)/src/openvpn/misc_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/misc_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/misc_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/misc_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/openvpn/misc_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/misc_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/misc_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/misc_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/misc_testdriver-list.o: $(top_builddir)/src/openvpn/list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-list.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-list.o `test -f '$(top_builddir)/src/openvpn/list.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/list.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/list.c' object='$(top_builddir)/src/openvpn/misc_testdriver-list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-list.o `test -f '$(top_builddir)/src/openvpn/list.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/list.c

$(top_builddir)/src/openvpn/misc_testdriver-list.obj: $(top_builddir)/src/openvpn/list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/misc_testdriver-list.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Tpo -c -o $(top_builddir)/src/openvpn/misc_testdriver-list.obj `if test -f '$(top_builddir)/src/openvpn/list.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/list.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/list.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/list.c' object='$(top_builddir)/src/openvpn/misc_testdriver-list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(misc_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/misc_testdriver-list.obj `if test -f '$(top_builddir)/src/openvpn/list.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/list.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/list.c'; fi`

ncp_testdriver-test_ncp.o: test_ncp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT ncp_testdriver-test_ncp.o -MD -MP -MF $(DEPDIR)/ncp_testdriver-test_ncp.Tpo -c -o ncp_testdriver-test_ncp.o `test -f 'test_ncp.c' || echo '$(srcdir)/'`test_ncp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ncp_testdriver-test_ncp.Tpo $(DEPDIR)/ncp_testdriver-test_ncp.Po
#	$(AM_V_CC)source='test_ncp.c' object='ncp_testdriver-test_ncp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o ncp_testdriver-test_ncp.o `test -f 'test_ncp.c' || echo '$(srcdir)/'`test_ncp.c

ncp_testdriver-test_ncp.obj: test_ncp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT ncp_testdriver-test_ncp.obj -MD -MP -MF $(DEPDIR)/ncp_testdriver-test_ncp.Tpo -c -o ncp_testdriver-test_ncp.obj `if test -f 'test_ncp.c'; then $(CYGPATH_W) 'test_ncp.c'; else $(CYGPATH_W) '$(srcdir)/test_ncp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ncp_testdriver-test_ncp.Tpo $(DEPDIR)/ncp_testdriver-test_ncp.Po
#	$(AM_V_CC)source='test_ncp.c' object='ncp_testdriver-test_ncp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o ncp_testdriver-test_ncp.obj `if test -f 'test_ncp.c'; then $(CYGPATH_W) 'test_ncp.c'; else $(CYGPATH_W) '$(srcdir)/test_ncp.c'; fi`

ncp_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT ncp_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/ncp_testdriver-mock_msg.Tpo -c -o ncp_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ncp_testdriver-mock_msg.Tpo $(DEPDIR)/ncp_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='ncp_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o ncp_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

ncp_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT ncp_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/ncp_testdriver-mock_msg.Tpo -c -o ncp_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ncp_testdriver-mock_msg.Tpo $(DEPDIR)/ncp_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='ncp_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o ncp_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

$(top_builddir)/src/openvpn/ncp_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/ncp_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/ncp_testdriver-crypto.o: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-crypto.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c

$(top_builddir)/src/openvpn/ncp_testdriver-crypto.obj: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-crypto.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`

$(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.o: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c

$(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.obj: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.o: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c

$(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.obj: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`

$(top_builddir)/src/openvpn/ncp_testdriver-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/ncp_testdriver-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/ncp_testdriver-packet_id.o: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-packet_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c

$(top_builddir)/src/openvpn/ncp_testdriver-packet_id.obj: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-packet_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`

$(top_builddir)/src/openvpn/ncp_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/ncp_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/ncp_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/ncp_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/compat/ncp_testdriver-compat-strsep.o: $(top_builddir)/src/compat/compat-strsep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/compat/ncp_testdriver-compat-strsep.o -MD -MP -MF $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Tpo -c -o $(top_builddir)/src/compat/ncp_testdriver-compat-strsep.o `test -f '$(top_builddir)/src/compat/compat-strsep.c' || echo '$(srcdir)/'`$(top_builddir)/src/compat/compat-strsep.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Tpo $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Po
#	$(AM_V_CC)source='$(top_builddir)/src/compat/compat-strsep.c' object='$(top_builddir)/src/compat/ncp_testdriver-compat-strsep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/compat/ncp_testdriver-compat-strsep.o `test -f '$(top_builddir)/src/compat/compat-strsep.c' || echo '$(srcdir)/'`$(top_builddir)/src/compat/compat-strsep.c

$(top_builddir)/src/compat/ncp_testdriver-compat-strsep.obj: $(top_builddir)/src/compat/compat-strsep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/compat/ncp_testdriver-compat-strsep.obj -MD -MP -MF $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Tpo -c -o $(top_builddir)/src/compat/ncp_testdriver-compat-strsep.obj `if test -f '$(top_builddir)/src/compat/compat-strsep.c'; then $(CYGPATH_W) '$(top_builddir)/src/compat/compat-strsep.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/compat/compat-strsep.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Tpo $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Po
#	$(AM_V_CC)source='$(top_builddir)/src/compat/compat-strsep.c' object='$(top_builddir)/src/compat/ncp_testdriver-compat-strsep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/compat/ncp_testdriver-compat-strsep.obj `if test -f '$(top_builddir)/src/compat/compat-strsep.c'; then $(CYGPATH_W) '$(top_builddir)/src/compat/compat-strsep.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/compat/compat-strsep.c'; fi`

$(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.o: $(top_builddir)/src/openvpn/ssl_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.o `test -f '$(top_builddir)/src/openvpn/ssl_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_util.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.o `test -f '$(top_builddir)/src/openvpn/ssl_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_util.c

$(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.obj: $(top_builddir)/src/openvpn/ssl_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Tpo -c -o $(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.obj `if test -f '$(top_builddir)/src/openvpn/ssl_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_util.c' object='$(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ncp_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ncp_testdriver-ssl_util.obj `if test -f '$(top_builddir)/src/openvpn/ssl_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_util.c'; fi`

networking_testdriver-test_networking.o: test_networking.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT networking_testdriver-test_networking.o -MD -MP -MF $(DEPDIR)/networking_testdriver-test_networking.Tpo -c -o networking_testdriver-test_networking.o `test -f 'test_networking.c' || echo '$(srcdir)/'`test_networking.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/networking_testdriver-test_networking.Tpo $(DEPDIR)/networking_testdriver-test_networking.Po
#	$(AM_V_CC)source='test_networking.c' object='networking_testdriver-test_networking.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o networking_testdriver-test_networking.o `test -f 'test_networking.c' || echo '$(srcdir)/'`test_networking.c

networking_testdriver-test_networking.obj: test_networking.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT networking_testdriver-test_networking.obj -MD -MP -MF $(DEPDIR)/networking_testdriver-test_networking.Tpo -c -o networking_testdriver-test_networking.obj `if test -f 'test_networking.c'; then $(CYGPATH_W) 'test_networking.c'; else $(CYGPATH_W) '$(srcdir)/test_networking.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/networking_testdriver-test_networking.Tpo $(DEPDIR)/networking_testdriver-test_networking.Po
#	$(AM_V_CC)source='test_networking.c' object='networking_testdriver-test_networking.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o networking_testdriver-test_networking.obj `if test -f 'test_networking.c'; then $(CYGPATH_W) 'test_networking.c'; else $(CYGPATH_W) '$(srcdir)/test_networking.c'; fi`

networking_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT networking_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/networking_testdriver-mock_msg.Tpo -c -o networking_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/networking_testdriver-mock_msg.Tpo $(DEPDIR)/networking_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='networking_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o networking_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

networking_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT networking_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/networking_testdriver-mock_msg.Tpo -c -o networking_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/networking_testdriver-mock_msg.Tpo $(DEPDIR)/networking_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='networking_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o networking_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

$(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.o: $(top_builddir)/src/openvpn/networking_sitnl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.o `test -f '$(top_builddir)/src/openvpn/networking_sitnl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/networking_sitnl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/networking_sitnl.c' object='$(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.o `test -f '$(top_builddir)/src/openvpn/networking_sitnl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/networking_sitnl.c

$(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.obj: $(top_builddir)/src/openvpn/networking_sitnl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.obj `if test -f '$(top_builddir)/src/openvpn/networking_sitnl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/networking_sitnl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/networking_sitnl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/networking_sitnl.c' object='$(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-networking_sitnl.obj `if test -f '$(top_builddir)/src/openvpn/networking_sitnl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/networking_sitnl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/networking_sitnl.c'; fi`

$(top_builddir)/src/openvpn/networking_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/networking_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/networking_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/networking_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/networking_testdriver-crypto.o: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-crypto.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/networking_testdriver-crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c

$(top_builddir)/src/openvpn/networking_testdriver-crypto.obj: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-crypto.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/networking_testdriver-crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`

$(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.o: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c

$(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.obj: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.o: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c

$(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.obj: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`

$(top_builddir)/src/openvpn/networking_testdriver-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/networking_testdriver-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/networking_testdriver-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/networking_testdriver-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/networking_testdriver-packet_id.o: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-packet_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/networking_testdriver-packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c

$(top_builddir)/src/openvpn/networking_testdriver-packet_id.obj: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-packet_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/networking_testdriver-packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`

$(top_builddir)/src/openvpn/networking_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/networking_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/networking_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/networking_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/networking_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/networking_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(networking_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/networking_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

packet_id_testdriver-test_packet_id.o: test_packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT packet_id_testdriver-test_packet_id.o -MD -MP -MF $(DEPDIR)/packet_id_testdriver-test_packet_id.Tpo -c -o packet_id_testdriver-test_packet_id.o `test -f 'test_packet_id.c' || echo '$(srcdir)/'`test_packet_id.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/packet_id_testdriver-test_packet_id.Tpo $(DEPDIR)/packet_id_testdriver-test_packet_id.Po
#	$(AM_V_CC)source='test_packet_id.c' object='packet_id_testdriver-test_packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o packet_id_testdriver-test_packet_id.o `test -f 'test_packet_id.c' || echo '$(srcdir)/'`test_packet_id.c

packet_id_testdriver-test_packet_id.obj: test_packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT packet_id_testdriver-test_packet_id.obj -MD -MP -MF $(DEPDIR)/packet_id_testdriver-test_packet_id.Tpo -c -o packet_id_testdriver-test_packet_id.obj `if test -f 'test_packet_id.c'; then $(CYGPATH_W) 'test_packet_id.c'; else $(CYGPATH_W) '$(srcdir)/test_packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/packet_id_testdriver-test_packet_id.Tpo $(DEPDIR)/packet_id_testdriver-test_packet_id.Po
#	$(AM_V_CC)source='test_packet_id.c' object='packet_id_testdriver-test_packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o packet_id_testdriver-test_packet_id.obj `if test -f 'test_packet_id.c'; then $(CYGPATH_W) 'test_packet_id.c'; else $(CYGPATH_W) '$(srcdir)/test_packet_id.c'; fi`

packet_id_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT packet_id_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/packet_id_testdriver-mock_msg.Tpo -c -o packet_id_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/packet_id_testdriver-mock_msg.Tpo $(DEPDIR)/packet_id_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='packet_id_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o packet_id_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

packet_id_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT packet_id_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/packet_id_testdriver-mock_msg.Tpo -c -o packet_id_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/packet_id_testdriver-mock_msg.Tpo $(DEPDIR)/packet_id_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='packet_id_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o packet_id_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

packet_id_testdriver-mock_get_random.o: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT packet_id_testdriver-mock_get_random.o -MD -MP -MF $(DEPDIR)/packet_id_testdriver-mock_get_random.Tpo -c -o packet_id_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/packet_id_testdriver-mock_get_random.Tpo $(DEPDIR)/packet_id_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='packet_id_testdriver-mock_get_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o packet_id_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c

packet_id_testdriver-mock_get_random.obj: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT packet_id_testdriver-mock_get_random.obj -MD -MP -MF $(DEPDIR)/packet_id_testdriver-mock_get_random.Tpo -c -o packet_id_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/packet_id_testdriver-mock_get_random.Tpo $(DEPDIR)/packet_id_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='packet_id_testdriver-mock_get_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o packet_id_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`

$(top_builddir)/src/openvpn/packet_id_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/packet_id_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/packet_id_testdriver-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/packet_id_testdriver-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.o: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c

$(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.obj: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`

$(top_builddir)/src/openvpn/packet_id_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/packet_id_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/packet_id_testdriver-reliable.o: $(top_builddir)/src/openvpn/reliable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-reliable.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-reliable.o `test -f '$(top_builddir)/src/openvpn/reliable.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/reliable.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/reliable.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-reliable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-reliable.o `test -f '$(top_builddir)/src/openvpn/reliable.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/reliable.c

$(top_builddir)/src/openvpn/packet_id_testdriver-reliable.obj: $(top_builddir)/src/openvpn/reliable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-reliable.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-reliable.obj `if test -f '$(top_builddir)/src/openvpn/reliable.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/reliable.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/reliable.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/reliable.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-reliable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-reliable.obj `if test -f '$(top_builddir)/src/openvpn/reliable.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/reliable.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/reliable.c'; fi`

$(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/openvpn/packet_id_testdriver-session_id.o: $(top_builddir)/src/openvpn/session_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-session_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-session_id.o `test -f '$(top_builddir)/src/openvpn/session_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/session_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/session_id.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-session_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-session_id.o `test -f '$(top_builddir)/src/openvpn/session_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/session_id.c

$(top_builddir)/src/openvpn/packet_id_testdriver-session_id.obj: $(top_builddir)/src/openvpn/session_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/packet_id_testdriver-session_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Tpo -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-session_id.obj `if test -f '$(top_builddir)/src/openvpn/session_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/session_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/session_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/session_id.c' object='$(top_builddir)/src/openvpn/packet_id_testdriver-session_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packet_id_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/packet_id_testdriver-session_id.obj `if test -f '$(top_builddir)/src/openvpn/session_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/session_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/session_id.c'; fi`

pkcs11_testdriver-test_pkcs11.o: test_pkcs11.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT pkcs11_testdriver-test_pkcs11.o -MD -MP -MF $(DEPDIR)/pkcs11_testdriver-test_pkcs11.Tpo -c -o pkcs11_testdriver-test_pkcs11.o `test -f 'test_pkcs11.c' || echo '$(srcdir)/'`test_pkcs11.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkcs11_testdriver-test_pkcs11.Tpo $(DEPDIR)/pkcs11_testdriver-test_pkcs11.Po
#	$(AM_V_CC)source='test_pkcs11.c' object='pkcs11_testdriver-test_pkcs11.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o pkcs11_testdriver-test_pkcs11.o `test -f 'test_pkcs11.c' || echo '$(srcdir)/'`test_pkcs11.c

pkcs11_testdriver-test_pkcs11.obj: test_pkcs11.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT pkcs11_testdriver-test_pkcs11.obj -MD -MP -MF $(DEPDIR)/pkcs11_testdriver-test_pkcs11.Tpo -c -o pkcs11_testdriver-test_pkcs11.obj `if test -f 'test_pkcs11.c'; then $(CYGPATH_W) 'test_pkcs11.c'; else $(CYGPATH_W) '$(srcdir)/test_pkcs11.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkcs11_testdriver-test_pkcs11.Tpo $(DEPDIR)/pkcs11_testdriver-test_pkcs11.Po
#	$(AM_V_CC)source='test_pkcs11.c' object='pkcs11_testdriver-test_pkcs11.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o pkcs11_testdriver-test_pkcs11.obj `if test -f 'test_pkcs11.c'; then $(CYGPATH_W) 'test_pkcs11.c'; else $(CYGPATH_W) '$(srcdir)/test_pkcs11.c'; fi`

pkcs11_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT pkcs11_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/pkcs11_testdriver-mock_msg.Tpo -c -o pkcs11_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkcs11_testdriver-mock_msg.Tpo $(DEPDIR)/pkcs11_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='pkcs11_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o pkcs11_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

pkcs11_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT pkcs11_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/pkcs11_testdriver-mock_msg.Tpo -c -o pkcs11_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkcs11_testdriver-mock_msg.Tpo $(DEPDIR)/pkcs11_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='pkcs11_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o pkcs11_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

pkcs11_testdriver-pkey_test_utils.o: pkey_test_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT pkcs11_testdriver-pkey_test_utils.o -MD -MP -MF $(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Tpo -c -o pkcs11_testdriver-pkey_test_utils.o `test -f 'pkey_test_utils.c' || echo '$(srcdir)/'`pkey_test_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Tpo $(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Po
#	$(AM_V_CC)source='pkey_test_utils.c' object='pkcs11_testdriver-pkey_test_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o pkcs11_testdriver-pkey_test_utils.o `test -f 'pkey_test_utils.c' || echo '$(srcdir)/'`pkey_test_utils.c

pkcs11_testdriver-pkey_test_utils.obj: pkey_test_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT pkcs11_testdriver-pkey_test_utils.obj -MD -MP -MF $(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Tpo -c -o pkcs11_testdriver-pkey_test_utils.obj `if test -f 'pkey_test_utils.c'; then $(CYGPATH_W) 'pkey_test_utils.c'; else $(CYGPATH_W) '$(srcdir)/pkey_test_utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Tpo $(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Po
#	$(AM_V_CC)source='pkey_test_utils.c' object='pkcs11_testdriver-pkey_test_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o pkcs11_testdriver-pkey_test_utils.obj `if test -f 'pkey_test_utils.c'; then $(CYGPATH_W) 'pkey_test_utils.c'; else $(CYGPATH_W) '$(srcdir)/pkey_test_utils.c'; fi`

pkcs11_testdriver-mock_get_random.o: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT pkcs11_testdriver-mock_get_random.o -MD -MP -MF $(DEPDIR)/pkcs11_testdriver-mock_get_random.Tpo -c -o pkcs11_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkcs11_testdriver-mock_get_random.Tpo $(DEPDIR)/pkcs11_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='pkcs11_testdriver-mock_get_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o pkcs11_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c

pkcs11_testdriver-mock_get_random.obj: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT pkcs11_testdriver-mock_get_random.obj -MD -MP -MF $(DEPDIR)/pkcs11_testdriver-mock_get_random.Tpo -c -o pkcs11_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkcs11_testdriver-mock_get_random.Tpo $(DEPDIR)/pkcs11_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='pkcs11_testdriver-mock_get_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o pkcs11_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.o: $(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.o `test -f '$(top_builddir)/src/openvpn/xkey_helper.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_helper.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.o `test -f '$(top_builddir)/src/openvpn/xkey_helper.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_helper.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.obj: $(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.obj `if test -f '$(top_builddir)/src/openvpn/xkey_helper.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_helper.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_helper.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_helper.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_helper.obj `if test -f '$(top_builddir)/src/openvpn/xkey_helper.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_helper.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_helper.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.o: $(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.o `test -f '$(top_builddir)/src/openvpn/xkey_provider.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_provider.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.o `test -f '$(top_builddir)/src/openvpn/xkey_provider.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_provider.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.obj: $(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.obj `if test -f '$(top_builddir)/src/openvpn/xkey_provider.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_provider.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_provider.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_provider.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-xkey_provider.obj `if test -f '$(top_builddir)/src/openvpn/xkey_provider.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_provider.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_provider.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-argv.o: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-argv.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-argv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-argv.obj: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-argv.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-argv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.o: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.obj: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.o: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.obj: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-base64.o: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-base64.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-base64.obj: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-base64.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.o: $(top_builddir)/src/openvpn/pkcs11.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.o `test -f '$(top_builddir)/src/openvpn/pkcs11.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/pkcs11.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/pkcs11.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.o `test -f '$(top_builddir)/src/openvpn/pkcs11.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/pkcs11.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.obj: $(top_builddir)/src/openvpn/pkcs11.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.obj `if test -f '$(top_builddir)/src/openvpn/pkcs11.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/pkcs11.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/pkcs11.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/pkcs11.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11.obj `if test -f '$(top_builddir)/src/openvpn/pkcs11.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/pkcs11.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/pkcs11.c'; fi`

$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.o: $(top_builddir)/src/openvpn/pkcs11_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.o `test -f '$(top_builddir)/src/openvpn/pkcs11_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/pkcs11_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/pkcs11_openssl.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.o `test -f '$(top_builddir)/src/openvpn/pkcs11_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/pkcs11_openssl.c

$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.obj: $(top_builddir)/src/openvpn/pkcs11_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Tpo -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.obj `if test -f '$(top_builddir)/src/openvpn/pkcs11_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/pkcs11_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/pkcs11_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/pkcs11_openssl.c' object='$(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkcs11_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkcs11_testdriver-pkcs11_openssl.obj `if test -f '$(top_builddir)/src/openvpn/pkcs11_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/pkcs11_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/pkcs11_openssl.c'; fi`

pkt_testdriver-test_pkt.o: test_pkt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT pkt_testdriver-test_pkt.o -MD -MP -MF $(DEPDIR)/pkt_testdriver-test_pkt.Tpo -c -o pkt_testdriver-test_pkt.o `test -f 'test_pkt.c' || echo '$(srcdir)/'`test_pkt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkt_testdriver-test_pkt.Tpo $(DEPDIR)/pkt_testdriver-test_pkt.Po
#	$(AM_V_CC)source='test_pkt.c' object='pkt_testdriver-test_pkt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o pkt_testdriver-test_pkt.o `test -f 'test_pkt.c' || echo '$(srcdir)/'`test_pkt.c

pkt_testdriver-test_pkt.obj: test_pkt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT pkt_testdriver-test_pkt.obj -MD -MP -MF $(DEPDIR)/pkt_testdriver-test_pkt.Tpo -c -o pkt_testdriver-test_pkt.obj `if test -f 'test_pkt.c'; then $(CYGPATH_W) 'test_pkt.c'; else $(CYGPATH_W) '$(srcdir)/test_pkt.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkt_testdriver-test_pkt.Tpo $(DEPDIR)/pkt_testdriver-test_pkt.Po
#	$(AM_V_CC)source='test_pkt.c' object='pkt_testdriver-test_pkt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o pkt_testdriver-test_pkt.obj `if test -f 'test_pkt.c'; then $(CYGPATH_W) 'test_pkt.c'; else $(CYGPATH_W) '$(srcdir)/test_pkt.c'; fi`

pkt_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT pkt_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/pkt_testdriver-mock_msg.Tpo -c -o pkt_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkt_testdriver-mock_msg.Tpo $(DEPDIR)/pkt_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='pkt_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o pkt_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

pkt_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT pkt_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/pkt_testdriver-mock_msg.Tpo -c -o pkt_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkt_testdriver-mock_msg.Tpo $(DEPDIR)/pkt_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='pkt_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o pkt_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

pkt_testdriver-mock_win32_execve.o: mock_win32_execve.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT pkt_testdriver-mock_win32_execve.o -MD -MP -MF $(DEPDIR)/pkt_testdriver-mock_win32_execve.Tpo -c -o pkt_testdriver-mock_win32_execve.o `test -f 'mock_win32_execve.c' || echo '$(srcdir)/'`mock_win32_execve.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkt_testdriver-mock_win32_execve.Tpo $(DEPDIR)/pkt_testdriver-mock_win32_execve.Po
#	$(AM_V_CC)source='mock_win32_execve.c' object='pkt_testdriver-mock_win32_execve.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o pkt_testdriver-mock_win32_execve.o `test -f 'mock_win32_execve.c' || echo '$(srcdir)/'`mock_win32_execve.c

pkt_testdriver-mock_win32_execve.obj: mock_win32_execve.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT pkt_testdriver-mock_win32_execve.obj -MD -MP -MF $(DEPDIR)/pkt_testdriver-mock_win32_execve.Tpo -c -o pkt_testdriver-mock_win32_execve.obj `if test -f 'mock_win32_execve.c'; then $(CYGPATH_W) 'mock_win32_execve.c'; else $(CYGPATH_W) '$(srcdir)/mock_win32_execve.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pkt_testdriver-mock_win32_execve.Tpo $(DEPDIR)/pkt_testdriver-mock_win32_execve.Po
#	$(AM_V_CC)source='mock_win32_execve.c' object='pkt_testdriver-mock_win32_execve.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o pkt_testdriver-mock_win32_execve.obj `if test -f 'mock_win32_execve.c'; then $(CYGPATH_W) 'mock_win32_execve.c'; else $(CYGPATH_W) '$(srcdir)/mock_win32_execve.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-argv.o: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-argv.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-argv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c

$(top_builddir)/src/openvpn/pkt_testdriver-argv.obj: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-argv.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-argv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-base64.o: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-base64.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c

$(top_builddir)/src/openvpn/pkt_testdriver-base64.obj: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-base64.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/pkt_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-crypto.o: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-crypto.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c

$(top_builddir)/src/openvpn/pkt_testdriver-crypto.obj: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-crypto.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.o: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c

$(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.obj: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.o: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c

$(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.obj: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-env_set.o: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-env_set.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-env_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c

$(top_builddir)/src/openvpn/pkt_testdriver-env_set.obj: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-env_set.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-env_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/pkt_testdriver-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-packet_id.o: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-packet_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c

$(top_builddir)/src/openvpn/pkt_testdriver-packet_id.obj: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-packet_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/pkt_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-reliable.o: $(top_builddir)/src/openvpn/reliable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-reliable.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-reliable.o `test -f '$(top_builddir)/src/openvpn/reliable.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/reliable.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/reliable.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-reliable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-reliable.o `test -f '$(top_builddir)/src/openvpn/reliable.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/reliable.c

$(top_builddir)/src/openvpn/pkt_testdriver-reliable.obj: $(top_builddir)/src/openvpn/reliable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-reliable.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-reliable.obj `if test -f '$(top_builddir)/src/openvpn/reliable.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/reliable.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/reliable.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/reliable.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-reliable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-reliable.obj `if test -f '$(top_builddir)/src/openvpn/reliable.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/reliable.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/reliable.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-run_command.o: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-run_command.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-run_command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c

$(top_builddir)/src/openvpn/pkt_testdriver-run_command.obj: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-run_command.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-run_command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-session_id.o: $(top_builddir)/src/openvpn/session_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-session_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-session_id.o `test -f '$(top_builddir)/src/openvpn/session_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/session_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/session_id.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-session_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-session_id.o `test -f '$(top_builddir)/src/openvpn/session_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/session_id.c

$(top_builddir)/src/openvpn/pkt_testdriver-session_id.obj: $(top_builddir)/src/openvpn/session_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-session_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-session_id.obj `if test -f '$(top_builddir)/src/openvpn/session_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/session_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/session_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/session_id.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-session_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-session_id.obj `if test -f '$(top_builddir)/src/openvpn/session_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/session_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/session_id.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.o: $(top_builddir)/src/openvpn/ssl_pkt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.o `test -f '$(top_builddir)/src/openvpn/ssl_pkt.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_pkt.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_pkt.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.o `test -f '$(top_builddir)/src/openvpn/ssl_pkt.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_pkt.c

$(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.obj: $(top_builddir)/src/openvpn/ssl_pkt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.obj `if test -f '$(top_builddir)/src/openvpn/ssl_pkt.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_pkt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_pkt.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_pkt.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-ssl_pkt.obj `if test -f '$(top_builddir)/src/openvpn/ssl_pkt.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_pkt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_pkt.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/pkt_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.o: $(top_builddir)/src/openvpn/tls_crypt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.o `test -f '$(top_builddir)/src/openvpn/tls_crypt.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/tls_crypt.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/tls_crypt.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.o `test -f '$(top_builddir)/src/openvpn/tls_crypt.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/tls_crypt.c

$(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.obj: $(top_builddir)/src/openvpn/tls_crypt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Tpo -c -o $(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.obj `if test -f '$(top_builddir)/src/openvpn/tls_crypt.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/tls_crypt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/tls_crypt.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/tls_crypt.c' object='$(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pkt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/pkt_testdriver-tls_crypt.obj `if test -f '$(top_builddir)/src/openvpn/tls_crypt.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/tls_crypt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/tls_crypt.c'; fi`

provider_testdriver-test_provider.o: test_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT provider_testdriver-test_provider.o -MD -MP -MF $(DEPDIR)/provider_testdriver-test_provider.Tpo -c -o provider_testdriver-test_provider.o `test -f 'test_provider.c' || echo '$(srcdir)/'`test_provider.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/provider_testdriver-test_provider.Tpo $(DEPDIR)/provider_testdriver-test_provider.Po
#	$(AM_V_CC)source='test_provider.c' object='provider_testdriver-test_provider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o provider_testdriver-test_provider.o `test -f 'test_provider.c' || echo '$(srcdir)/'`test_provider.c

provider_testdriver-test_provider.obj: test_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT provider_testdriver-test_provider.obj -MD -MP -MF $(DEPDIR)/provider_testdriver-test_provider.Tpo -c -o provider_testdriver-test_provider.obj `if test -f 'test_provider.c'; then $(CYGPATH_W) 'test_provider.c'; else $(CYGPATH_W) '$(srcdir)/test_provider.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/provider_testdriver-test_provider.Tpo $(DEPDIR)/provider_testdriver-test_provider.Po
#	$(AM_V_CC)source='test_provider.c' object='provider_testdriver-test_provider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o provider_testdriver-test_provider.obj `if test -f 'test_provider.c'; then $(CYGPATH_W) 'test_provider.c'; else $(CYGPATH_W) '$(srcdir)/test_provider.c'; fi`

provider_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT provider_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/provider_testdriver-mock_msg.Tpo -c -o provider_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/provider_testdriver-mock_msg.Tpo $(DEPDIR)/provider_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='provider_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o provider_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

provider_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT provider_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/provider_testdriver-mock_msg.Tpo -c -o provider_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/provider_testdriver-mock_msg.Tpo $(DEPDIR)/provider_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='provider_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o provider_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

$(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.o: $(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.o `test -f '$(top_builddir)/src/openvpn/xkey_helper.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_helper.c' object='$(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.o `test -f '$(top_builddir)/src/openvpn/xkey_helper.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_helper.c

$(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.obj: $(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.obj `if test -f '$(top_builddir)/src/openvpn/xkey_helper.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_helper.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_helper.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_helper.c' object='$(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-xkey_helper.obj `if test -f '$(top_builddir)/src/openvpn/xkey_helper.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_helper.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_helper.c'; fi`

$(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.o: $(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.o `test -f '$(top_builddir)/src/openvpn/xkey_provider.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_provider.c' object='$(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.o `test -f '$(top_builddir)/src/openvpn/xkey_provider.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_provider.c

$(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.obj: $(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.obj `if test -f '$(top_builddir)/src/openvpn/xkey_provider.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_provider.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_provider.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_provider.c' object='$(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-xkey_provider.obj `if test -f '$(top_builddir)/src/openvpn/xkey_provider.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_provider.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_provider.c'; fi`

$(top_builddir)/src/openvpn/provider_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/provider_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/provider_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/provider_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/provider_testdriver-base64.o: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-base64.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/provider_testdriver-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c

$(top_builddir)/src/openvpn/provider_testdriver-base64.obj: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-base64.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/provider_testdriver-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`

provider_testdriver-mock_get_random.o: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT provider_testdriver-mock_get_random.o -MD -MP -MF $(DEPDIR)/provider_testdriver-mock_get_random.Tpo -c -o provider_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/provider_testdriver-mock_get_random.Tpo $(DEPDIR)/provider_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='provider_testdriver-mock_get_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o provider_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c

provider_testdriver-mock_get_random.obj: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT provider_testdriver-mock_get_random.obj -MD -MP -MF $(DEPDIR)/provider_testdriver-mock_get_random.Tpo -c -o provider_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/provider_testdriver-mock_get_random.Tpo $(DEPDIR)/provider_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='provider_testdriver-mock_get_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o provider_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`

$(top_builddir)/src/openvpn/provider_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/provider_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/provider_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/provider_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/openvpn/provider_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/provider_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/provider_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/provider_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/provider_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/provider_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(provider_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/provider_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

ssl_testdriver-test_ssl.o: test_ssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-test_ssl.o -MD -MP -MF $(DEPDIR)/ssl_testdriver-test_ssl.Tpo -c -o ssl_testdriver-test_ssl.o `test -f 'test_ssl.c' || echo '$(srcdir)/'`test_ssl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-test_ssl.Tpo $(DEPDIR)/ssl_testdriver-test_ssl.Po
#	$(AM_V_CC)source='test_ssl.c' object='ssl_testdriver-test_ssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-test_ssl.o `test -f 'test_ssl.c' || echo '$(srcdir)/'`test_ssl.c

ssl_testdriver-test_ssl.obj: test_ssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-test_ssl.obj -MD -MP -MF $(DEPDIR)/ssl_testdriver-test_ssl.Tpo -c -o ssl_testdriver-test_ssl.obj `if test -f 'test_ssl.c'; then $(CYGPATH_W) 'test_ssl.c'; else $(CYGPATH_W) '$(srcdir)/test_ssl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-test_ssl.Tpo $(DEPDIR)/ssl_testdriver-test_ssl.Po
#	$(AM_V_CC)source='test_ssl.c' object='ssl_testdriver-test_ssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-test_ssl.obj `if test -f 'test_ssl.c'; then $(CYGPATH_W) 'test_ssl.c'; else $(CYGPATH_W) '$(srcdir)/test_ssl.c'; fi`

ssl_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/ssl_testdriver-mock_msg.Tpo -c -o ssl_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-mock_msg.Tpo $(DEPDIR)/ssl_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='ssl_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

ssl_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/ssl_testdriver-mock_msg.Tpo -c -o ssl_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-mock_msg.Tpo $(DEPDIR)/ssl_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='ssl_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

ssl_testdriver-mock_management.o: mock_management.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-mock_management.o -MD -MP -MF $(DEPDIR)/ssl_testdriver-mock_management.Tpo -c -o ssl_testdriver-mock_management.o `test -f 'mock_management.c' || echo '$(srcdir)/'`mock_management.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-mock_management.Tpo $(DEPDIR)/ssl_testdriver-mock_management.Po
#	$(AM_V_CC)source='mock_management.c' object='ssl_testdriver-mock_management.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-mock_management.o `test -f 'mock_management.c' || echo '$(srcdir)/'`mock_management.c

ssl_testdriver-mock_management.obj: mock_management.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-mock_management.obj -MD -MP -MF $(DEPDIR)/ssl_testdriver-mock_management.Tpo -c -o ssl_testdriver-mock_management.obj `if test -f 'mock_management.c'; then $(CYGPATH_W) 'mock_management.c'; else $(CYGPATH_W) '$(srcdir)/mock_management.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-mock_management.Tpo $(DEPDIR)/ssl_testdriver-mock_management.Po
#	$(AM_V_CC)source='mock_management.c' object='ssl_testdriver-mock_management.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-mock_management.obj `if test -f 'mock_management.c'; then $(CYGPATH_W) 'mock_management.c'; else $(CYGPATH_W) '$(srcdir)/mock_management.c'; fi`

ssl_testdriver-mock_ssl_dependencies.o: mock_ssl_dependencies.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-mock_ssl_dependencies.o -MD -MP -MF $(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Tpo -c -o ssl_testdriver-mock_ssl_dependencies.o `test -f 'mock_ssl_dependencies.c' || echo '$(srcdir)/'`mock_ssl_dependencies.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Tpo $(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Po
#	$(AM_V_CC)source='mock_ssl_dependencies.c' object='ssl_testdriver-mock_ssl_dependencies.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-mock_ssl_dependencies.o `test -f 'mock_ssl_dependencies.c' || echo '$(srcdir)/'`mock_ssl_dependencies.c

ssl_testdriver-mock_ssl_dependencies.obj: mock_ssl_dependencies.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-mock_ssl_dependencies.obj -MD -MP -MF $(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Tpo -c -o ssl_testdriver-mock_ssl_dependencies.obj `if test -f 'mock_ssl_dependencies.c'; then $(CYGPATH_W) 'mock_ssl_dependencies.c'; else $(CYGPATH_W) '$(srcdir)/mock_ssl_dependencies.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Tpo $(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Po
#	$(AM_V_CC)source='mock_ssl_dependencies.c' object='ssl_testdriver-mock_ssl_dependencies.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-mock_ssl_dependencies.obj `if test -f 'mock_ssl_dependencies.c'; then $(CYGPATH_W) 'mock_ssl_dependencies.c'; else $(CYGPATH_W) '$(srcdir)/mock_ssl_dependencies.c'; fi`

ssl_testdriver-mock_win32_execve.o: mock_win32_execve.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-mock_win32_execve.o -MD -MP -MF $(DEPDIR)/ssl_testdriver-mock_win32_execve.Tpo -c -o ssl_testdriver-mock_win32_execve.o `test -f 'mock_win32_execve.c' || echo '$(srcdir)/'`mock_win32_execve.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-mock_win32_execve.Tpo $(DEPDIR)/ssl_testdriver-mock_win32_execve.Po
#	$(AM_V_CC)source='mock_win32_execve.c' object='ssl_testdriver-mock_win32_execve.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-mock_win32_execve.o `test -f 'mock_win32_execve.c' || echo '$(srcdir)/'`mock_win32_execve.c

ssl_testdriver-mock_win32_execve.obj: mock_win32_execve.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT ssl_testdriver-mock_win32_execve.obj -MD -MP -MF $(DEPDIR)/ssl_testdriver-mock_win32_execve.Tpo -c -o ssl_testdriver-mock_win32_execve.obj `if test -f 'mock_win32_execve.c'; then $(CYGPATH_W) 'mock_win32_execve.c'; else $(CYGPATH_W) '$(srcdir)/mock_win32_execve.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssl_testdriver-mock_win32_execve.Tpo $(DEPDIR)/ssl_testdriver-mock_win32_execve.Po
#	$(AM_V_CC)source='mock_win32_execve.c' object='ssl_testdriver-mock_win32_execve.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o ssl_testdriver-mock_win32_execve.obj `if test -f 'mock_win32_execve.c'; then $(CYGPATH_W) 'mock_win32_execve.c'; else $(CYGPATH_W) '$(srcdir)/mock_win32_execve.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-argv.o: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-argv.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-argv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c

$(top_builddir)/src/openvpn/ssl_testdriver-argv.obj: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-argv.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-argv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-base64.o: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-base64.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c

$(top_builddir)/src/openvpn/ssl_testdriver-base64.obj: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-base64.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/ssl_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/compat/ssl_testdriver-compat-strsep.o: $(top_builddir)/src/compat/compat-strsep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/compat/ssl_testdriver-compat-strsep.o -MD -MP -MF $(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Tpo -c -o $(top_builddir)/src/compat/ssl_testdriver-compat-strsep.o `test -f '$(top_builddir)/src/compat/compat-strsep.c' || echo '$(srcdir)/'`$(top_builddir)/src/compat/compat-strsep.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Tpo $(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Po
#	$(AM_V_CC)source='$(top_builddir)/src/compat/compat-strsep.c' object='$(top_builddir)/src/compat/ssl_testdriver-compat-strsep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/compat/ssl_testdriver-compat-strsep.o `test -f '$(top_builddir)/src/compat/compat-strsep.c' || echo '$(srcdir)/'`$(top_builddir)/src/compat/compat-strsep.c

$(top_builddir)/src/compat/ssl_testdriver-compat-strsep.obj: $(top_builddir)/src/compat/compat-strsep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/compat/ssl_testdriver-compat-strsep.obj -MD -MP -MF $(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Tpo -c -o $(top_builddir)/src/compat/ssl_testdriver-compat-strsep.obj `if test -f '$(top_builddir)/src/compat/compat-strsep.c'; then $(CYGPATH_W) '$(top_builddir)/src/compat/compat-strsep.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/compat/compat-strsep.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Tpo $(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Po
#	$(AM_V_CC)source='$(top_builddir)/src/compat/compat-strsep.c' object='$(top_builddir)/src/compat/ssl_testdriver-compat-strsep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/compat/ssl_testdriver-compat-strsep.obj `if test -f '$(top_builddir)/src/compat/compat-strsep.c'; then $(CYGPATH_W) '$(top_builddir)/src/compat/compat-strsep.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/compat/compat-strsep.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-crypto.o: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-crypto.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c

$(top_builddir)/src/openvpn/ssl_testdriver-crypto.obj: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-crypto.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.o: $(top_builddir)/src/openvpn/cryptoapi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.o `test -f '$(top_builddir)/src/openvpn/cryptoapi.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/cryptoapi.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/cryptoapi.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.o `test -f '$(top_builddir)/src/openvpn/cryptoapi.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/cryptoapi.c

$(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.obj: $(top_builddir)/src/openvpn/cryptoapi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.obj `if test -f '$(top_builddir)/src/openvpn/cryptoapi.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/cryptoapi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/cryptoapi.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/cryptoapi.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-cryptoapi.obj `if test -f '$(top_builddir)/src/openvpn/cryptoapi.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/cryptoapi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/cryptoapi.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.o: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c

$(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.obj: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.o: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c

$(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.obj: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-env_set.o: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-env_set.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-env_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c

$(top_builddir)/src/openvpn/ssl_testdriver-env_set.obj: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-env_set.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-env_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-mss.o: $(top_builddir)/src/openvpn/mss.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-mss.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-mss.o `test -f '$(top_builddir)/src/openvpn/mss.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/mss.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/mss.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-mss.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-mss.o `test -f '$(top_builddir)/src/openvpn/mss.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/mss.c

$(top_builddir)/src/openvpn/ssl_testdriver-mss.obj: $(top_builddir)/src/openvpn/mss.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-mss.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-mss.obj `if test -f '$(top_builddir)/src/openvpn/mss.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/mss.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/mss.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/mss.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-mss.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-mss.obj `if test -f '$(top_builddir)/src/openvpn/mss.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/mss.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/mss.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-mtu.o: $(top_builddir)/src/openvpn/mtu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-mtu.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-mtu.o `test -f '$(top_builddir)/src/openvpn/mtu.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/mtu.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/mtu.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-mtu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-mtu.o `test -f '$(top_builddir)/src/openvpn/mtu.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/mtu.c

$(top_builddir)/src/openvpn/ssl_testdriver-mtu.obj: $(top_builddir)/src/openvpn/mtu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-mtu.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-mtu.obj `if test -f '$(top_builddir)/src/openvpn/mtu.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/mtu.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/mtu.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/mtu.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-mtu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-mtu.obj `if test -f '$(top_builddir)/src/openvpn/mtu.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/mtu.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/mtu.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/ssl_testdriver-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-options_util.o: $(top_builddir)/src/openvpn/options_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-options_util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-options_util.o `test -f '$(top_builddir)/src/openvpn/options_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/options_util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/options_util.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-options_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-options_util.o `test -f '$(top_builddir)/src/openvpn/options_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/options_util.c

$(top_builddir)/src/openvpn/ssl_testdriver-options_util.obj: $(top_builddir)/src/openvpn/options_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-options_util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-options_util.obj `if test -f '$(top_builddir)/src/openvpn/options_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/options_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/options_util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/options_util.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-options_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-options_util.obj `if test -f '$(top_builddir)/src/openvpn/options_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/options_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/options_util.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-packet_id.o: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-packet_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c

$(top_builddir)/src/openvpn/ssl_testdriver-packet_id.obj: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-packet_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/ssl_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-run_command.o: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-run_command.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-run_command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c

$(top_builddir)/src/openvpn/ssl_testdriver-run_command.obj: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-run_command.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-run_command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.o: $(top_builddir)/src/openvpn/ssl_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.o `test -f '$(top_builddir)/src/openvpn/ssl_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_openssl.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.o `test -f '$(top_builddir)/src/openvpn/ssl_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_openssl.c

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.obj: $(top_builddir)/src/openvpn/ssl_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.obj `if test -f '$(top_builddir)/src/openvpn/ssl_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_openssl.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_openssl.obj `if test -f '$(top_builddir)/src/openvpn/ssl_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_openssl.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.o: $(top_builddir)/src/openvpn/ssl_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.o `test -f '$(top_builddir)/src/openvpn/ssl_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_mbedtls.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.o `test -f '$(top_builddir)/src/openvpn/ssl_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_mbedtls.c

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.obj: $(top_builddir)/src/openvpn/ssl_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/ssl_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_mbedtls.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/ssl_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.o: $(top_builddir)/src/openvpn/ssl_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.o `test -f '$(top_builddir)/src/openvpn/ssl_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_util.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.o `test -f '$(top_builddir)/src/openvpn/ssl_util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_util.c

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.obj: $(top_builddir)/src/openvpn/ssl_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.obj `if test -f '$(top_builddir)/src/openvpn/ssl_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_util.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_util.obj `if test -f '$(top_builddir)/src/openvpn/ssl_util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_util.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.o: $(top_builddir)/src/openvpn/ssl_verify_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.o `test -f '$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.o `test -f '$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.obj: $(top_builddir)/src/openvpn/ssl_verify_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_verify_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.o: $(top_builddir)/src/openvpn/ssl_verify_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.o `test -f '$(top_builddir)/src/openvpn/ssl_verify_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_verify_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_verify_openssl.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.o `test -f '$(top_builddir)/src/openvpn/ssl_verify_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/ssl_verify_openssl.c

$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.obj: $(top_builddir)/src/openvpn/ssl_verify_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.obj `if test -f '$(top_builddir)/src/openvpn/ssl_verify_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_verify_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_verify_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/ssl_verify_openssl.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-ssl_verify_openssl.obj `if test -f '$(top_builddir)/src/openvpn/ssl_verify_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/ssl_verify_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/ssl_verify_openssl.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.o: $(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.o `test -f '$(top_builddir)/src/openvpn/xkey_helper.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_helper.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.o `test -f '$(top_builddir)/src/openvpn/xkey_helper.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_helper.c

$(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.obj: $(top_builddir)/src/openvpn/xkey_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.obj `if test -f '$(top_builddir)/src/openvpn/xkey_helper.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_helper.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_helper.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_helper.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-xkey_helper.obj `if test -f '$(top_builddir)/src/openvpn/xkey_helper.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_helper.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_helper.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.o: $(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.o `test -f '$(top_builddir)/src/openvpn/xkey_provider.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_provider.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.o `test -f '$(top_builddir)/src/openvpn/xkey_provider.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/xkey_provider.c

$(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.obj: $(top_builddir)/src/openvpn/xkey_provider.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.obj `if test -f '$(top_builddir)/src/openvpn/xkey_provider.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_provider.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_provider.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/xkey_provider.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-xkey_provider.obj `if test -f '$(top_builddir)/src/openvpn/xkey_provider.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/xkey_provider.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/xkey_provider.c'; fi`

$(top_builddir)/src/openvpn/ssl_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/ssl_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ssl_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/ssl_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/ssl_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ssl_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ssl_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

tls_crypt_testdriver-test_tls_crypt.o: test_tls_crypt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT tls_crypt_testdriver-test_tls_crypt.o -MD -MP -MF $(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Tpo -c -o tls_crypt_testdriver-test_tls_crypt.o `test -f 'test_tls_crypt.c' || echo '$(srcdir)/'`test_tls_crypt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Tpo $(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Po
#	$(AM_V_CC)source='test_tls_crypt.c' object='tls_crypt_testdriver-test_tls_crypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o tls_crypt_testdriver-test_tls_crypt.o `test -f 'test_tls_crypt.c' || echo '$(srcdir)/'`test_tls_crypt.c

tls_crypt_testdriver-test_tls_crypt.obj: test_tls_crypt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT tls_crypt_testdriver-test_tls_crypt.obj -MD -MP -MF $(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Tpo -c -o tls_crypt_testdriver-test_tls_crypt.obj `if test -f 'test_tls_crypt.c'; then $(CYGPATH_W) 'test_tls_crypt.c'; else $(CYGPATH_W) '$(srcdir)/test_tls_crypt.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Tpo $(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Po
#	$(AM_V_CC)source='test_tls_crypt.c' object='tls_crypt_testdriver-test_tls_crypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o tls_crypt_testdriver-test_tls_crypt.obj `if test -f 'test_tls_crypt.c'; then $(CYGPATH_W) 'test_tls_crypt.c'; else $(CYGPATH_W) '$(srcdir)/test_tls_crypt.c'; fi`

tls_crypt_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT tls_crypt_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/tls_crypt_testdriver-mock_msg.Tpo -c -o tls_crypt_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tls_crypt_testdriver-mock_msg.Tpo $(DEPDIR)/tls_crypt_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='tls_crypt_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o tls_crypt_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

tls_crypt_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT tls_crypt_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/tls_crypt_testdriver-mock_msg.Tpo -c -o tls_crypt_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tls_crypt_testdriver-mock_msg.Tpo $(DEPDIR)/tls_crypt_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='tls_crypt_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o tls_crypt_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

tls_crypt_testdriver-mock_win32_execve.o: mock_win32_execve.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT tls_crypt_testdriver-mock_win32_execve.o -MD -MP -MF $(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Tpo -c -o tls_crypt_testdriver-mock_win32_execve.o `test -f 'mock_win32_execve.c' || echo '$(srcdir)/'`mock_win32_execve.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Tpo $(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Po
#	$(AM_V_CC)source='mock_win32_execve.c' object='tls_crypt_testdriver-mock_win32_execve.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o tls_crypt_testdriver-mock_win32_execve.o `test -f 'mock_win32_execve.c' || echo '$(srcdir)/'`mock_win32_execve.c

tls_crypt_testdriver-mock_win32_execve.obj: mock_win32_execve.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT tls_crypt_testdriver-mock_win32_execve.obj -MD -MP -MF $(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Tpo -c -o tls_crypt_testdriver-mock_win32_execve.obj `if test -f 'mock_win32_execve.c'; then $(CYGPATH_W) 'mock_win32_execve.c'; else $(CYGPATH_W) '$(srcdir)/mock_win32_execve.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Tpo $(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Po
#	$(AM_V_CC)source='mock_win32_execve.c' object='tls_crypt_testdriver-mock_win32_execve.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o tls_crypt_testdriver-mock_win32_execve.obj `if test -f 'mock_win32_execve.c'; then $(CYGPATH_W) 'mock_win32_execve.c'; else $(CYGPATH_W) '$(srcdir)/mock_win32_execve.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.o: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.o `test -f '$(top_builddir)/src/openvpn/argv.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/argv.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.obj: $(top_builddir)/src/openvpn/argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/argv.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-argv.obj `if test -f '$(top_builddir)/src/openvpn/argv.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/argv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/argv.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.o: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.obj: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.o: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.obj: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.o: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.obj: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.o: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.obj: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.o: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.obj: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.o: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.obj: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.o: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c

$(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.obj: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tls_crypt_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/tls_crypt_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`

user_pass_testdriver-test_user_pass.o: test_user_pass.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT user_pass_testdriver-test_user_pass.o -MD -MP -MF $(DEPDIR)/user_pass_testdriver-test_user_pass.Tpo -c -o user_pass_testdriver-test_user_pass.o `test -f 'test_user_pass.c' || echo '$(srcdir)/'`test_user_pass.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_pass_testdriver-test_user_pass.Tpo $(DEPDIR)/user_pass_testdriver-test_user_pass.Po
#	$(AM_V_CC)source='test_user_pass.c' object='user_pass_testdriver-test_user_pass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o user_pass_testdriver-test_user_pass.o `test -f 'test_user_pass.c' || echo '$(srcdir)/'`test_user_pass.c

user_pass_testdriver-test_user_pass.obj: test_user_pass.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT user_pass_testdriver-test_user_pass.obj -MD -MP -MF $(DEPDIR)/user_pass_testdriver-test_user_pass.Tpo -c -o user_pass_testdriver-test_user_pass.obj `if test -f 'test_user_pass.c'; then $(CYGPATH_W) 'test_user_pass.c'; else $(CYGPATH_W) '$(srcdir)/test_user_pass.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_pass_testdriver-test_user_pass.Tpo $(DEPDIR)/user_pass_testdriver-test_user_pass.Po
#	$(AM_V_CC)source='test_user_pass.c' object='user_pass_testdriver-test_user_pass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o user_pass_testdriver-test_user_pass.obj `if test -f 'test_user_pass.c'; then $(CYGPATH_W) 'test_user_pass.c'; else $(CYGPATH_W) '$(srcdir)/test_user_pass.c'; fi`

user_pass_testdriver-mock_msg.o: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT user_pass_testdriver-mock_msg.o -MD -MP -MF $(DEPDIR)/user_pass_testdriver-mock_msg.Tpo -c -o user_pass_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_pass_testdriver-mock_msg.Tpo $(DEPDIR)/user_pass_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='user_pass_testdriver-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o user_pass_testdriver-mock_msg.o `test -f 'mock_msg.c' || echo '$(srcdir)/'`mock_msg.c

user_pass_testdriver-mock_msg.obj: mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT user_pass_testdriver-mock_msg.obj -MD -MP -MF $(DEPDIR)/user_pass_testdriver-mock_msg.Tpo -c -o user_pass_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_pass_testdriver-mock_msg.Tpo $(DEPDIR)/user_pass_testdriver-mock_msg.Po
#	$(AM_V_CC)source='mock_msg.c' object='user_pass_testdriver-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o user_pass_testdriver-mock_msg.obj `if test -f 'mock_msg.c'; then $(CYGPATH_W) 'mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/mock_msg.c'; fi`

$(top_builddir)/src/openvpn/user_pass_testdriver-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/user_pass_testdriver-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/user_pass_testdriver-console.o: $(top_builddir)/src/openvpn/console.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-console.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-console.o `test -f '$(top_builddir)/src/openvpn/console.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/console.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/console.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-console.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-console.o `test -f '$(top_builddir)/src/openvpn/console.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/console.c

$(top_builddir)/src/openvpn/user_pass_testdriver-console.obj: $(top_builddir)/src/openvpn/console.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-console.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-console.obj `if test -f '$(top_builddir)/src/openvpn/console.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/console.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/console.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/console.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-console.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-console.obj `if test -f '$(top_builddir)/src/openvpn/console.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/console.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/console.c'; fi`

$(top_builddir)/src/openvpn/user_pass_testdriver-env_set.o: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-env_set.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-env_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-env_set.o `test -f '$(top_builddir)/src/openvpn/env_set.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/env_set.c

$(top_builddir)/src/openvpn/user_pass_testdriver-env_set.obj: $(top_builddir)/src/openvpn/env_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-env_set.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/env_set.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-env_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-env_set.obj `if test -f '$(top_builddir)/src/openvpn/env_set.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/env_set.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/env_set.c'; fi`

user_pass_testdriver-mock_win32_execve.o: mock_win32_execve.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT user_pass_testdriver-mock_win32_execve.o -MD -MP -MF $(DEPDIR)/user_pass_testdriver-mock_win32_execve.Tpo -c -o user_pass_testdriver-mock_win32_execve.o `test -f 'mock_win32_execve.c' || echo '$(srcdir)/'`mock_win32_execve.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_pass_testdriver-mock_win32_execve.Tpo $(DEPDIR)/user_pass_testdriver-mock_win32_execve.Po
#	$(AM_V_CC)source='mock_win32_execve.c' object='user_pass_testdriver-mock_win32_execve.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o user_pass_testdriver-mock_win32_execve.o `test -f 'mock_win32_execve.c' || echo '$(srcdir)/'`mock_win32_execve.c

user_pass_testdriver-mock_win32_execve.obj: mock_win32_execve.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT user_pass_testdriver-mock_win32_execve.obj -MD -MP -MF $(DEPDIR)/user_pass_testdriver-mock_win32_execve.Tpo -c -o user_pass_testdriver-mock_win32_execve.obj `if test -f 'mock_win32_execve.c'; then $(CYGPATH_W) 'mock_win32_execve.c'; else $(CYGPATH_W) '$(srcdir)/mock_win32_execve.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_pass_testdriver-mock_win32_execve.Tpo $(DEPDIR)/user_pass_testdriver-mock_win32_execve.Po
#	$(AM_V_CC)source='mock_win32_execve.c' object='user_pass_testdriver-mock_win32_execve.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o user_pass_testdriver-mock_win32_execve.obj `if test -f 'mock_win32_execve.c'; then $(CYGPATH_W) 'mock_win32_execve.c'; else $(CYGPATH_W) '$(srcdir)/mock_win32_execve.c'; fi`

$(top_builddir)/src/openvpn/user_pass_testdriver-run_command.o: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-run_command.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-run_command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-run_command.o `test -f '$(top_builddir)/src/openvpn/run_command.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/run_command.c

$(top_builddir)/src/openvpn/user_pass_testdriver-run_command.obj: $(top_builddir)/src/openvpn/run_command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-run_command.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/run_command.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-run_command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-run_command.obj `if test -f '$(top_builddir)/src/openvpn/run_command.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/run_command.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/run_command.c'; fi`

user_pass_testdriver-mock_get_random.o: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT user_pass_testdriver-mock_get_random.o -MD -MP -MF $(DEPDIR)/user_pass_testdriver-mock_get_random.Tpo -c -o user_pass_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_pass_testdriver-mock_get_random.Tpo $(DEPDIR)/user_pass_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='user_pass_testdriver-mock_get_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o user_pass_testdriver-mock_get_random.o `test -f 'mock_get_random.c' || echo '$(srcdir)/'`mock_get_random.c

user_pass_testdriver-mock_get_random.obj: mock_get_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT user_pass_testdriver-mock_get_random.obj -MD -MP -MF $(DEPDIR)/user_pass_testdriver-mock_get_random.Tpo -c -o user_pass_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_pass_testdriver-mock_get_random.Tpo $(DEPDIR)/user_pass_testdriver-mock_get_random.Po
#	$(AM_V_CC)source='mock_get_random.c' object='user_pass_testdriver-mock_get_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o user_pass_testdriver-mock_get_random.obj `if test -f 'mock_get_random.c'; then $(CYGPATH_W) 'mock_get_random.c'; else $(CYGPATH_W) '$(srcdir)/mock_get_random.c'; fi`

$(top_builddir)/src/openvpn/user_pass_testdriver-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/user_pass_testdriver-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

$(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.o: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.o `test -f '$(top_builddir)/src/openvpn/win32-util.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/win32-util.c

$(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.obj: $(top_builddir)/src/openvpn/win32-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/win32-util.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-win32-util.obj `if test -f '$(top_builddir)/src/openvpn/win32-util.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/win32-util.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/win32-util.c'; fi`

$(top_builddir)/src/openvpn/user_pass_testdriver-base64.o: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-base64.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-base64.o `test -f '$(top_builddir)/src/openvpn/base64.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/base64.c

$(top_builddir)/src/openvpn/user_pass_testdriver-base64.obj: $(top_builddir)/src/openvpn/base64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/user_pass_testdriver-base64.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Tpo -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/base64.c' object='$(top_builddir)/src/openvpn/user_pass_testdriver-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(user_pass_testdriver_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/user_pass_testdriver-base64.obj `if test -f '$(top_builddir)/src/openvpn/base64.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/base64.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/base64.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
argv_testdriver.log: argv_testdriver$(EXEEXT)
	@p='argv_testdriver$(EXEEXT)'; \
	b='argv_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
buffer_testdriver.log: buffer_testdriver$(EXEEXT)
	@p='buffer_testdriver$(EXEEXT)'; \
	b='buffer_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
crypto_testdriver.log: crypto_testdriver$(EXEEXT)
	@p='crypto_testdriver$(EXEEXT)'; \
	b='crypto_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
packet_id_testdriver.log: packet_id_testdriver$(EXEEXT)
	@p='packet_id_testdriver$(EXEEXT)'; \
	b='packet_id_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
auth_token_testdriver.log: auth_token_testdriver$(EXEEXT)
	@p='auth_token_testdriver$(EXEEXT)'; \
	b='auth_token_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ncp_testdriver.log: ncp_testdriver$(EXEEXT)
	@p='ncp_testdriver$(EXEEXT)'; \
	b='ncp_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
misc_testdriver.log: misc_testdriver$(EXEEXT)
	@p='misc_testdriver$(EXEEXT)'; \
	b='misc_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pkt_testdriver.log: pkt_testdriver$(EXEEXT)
	@p='pkt_testdriver$(EXEEXT)'; \
	b='pkt_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ssl_testdriver.log: ssl_testdriver$(EXEEXT)
	@p='ssl_testdriver$(EXEEXT)'; \
	b='ssl_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
user_pass_testdriver.log: user_pass_testdriver$(EXEEXT)
	@p='user_pass_testdriver$(EXEEXT)'; \
	b='user_pass_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tls_crypt_testdriver.log: tls_crypt_testdriver$(EXEEXT)
	@p='tls_crypt_testdriver$(EXEEXT)'; \
	b='tls_crypt_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
provider_testdriver.log: provider_testdriver$(EXEEXT)
	@p='provider_testdriver$(EXEEXT)'; \
	b='provider_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cryptoapi_testdriver.log: cryptoapi_testdriver$(EXEEXT)
	@p='cryptoapi_testdriver$(EXEEXT)'; \
	b='cryptoapi_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pkcs11_testdriver.log: pkcs11_testdriver$(EXEEXT)
	@p='pkcs11_testdriver$(EXEEXT)'; \
	b='pkcs11_testdriver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(top_builddir)/src/compat/$(DEPDIR)/$(am__dirstamp)" || rm -f $(top_builddir)/src/compat/$(DEPDIR)/$(am__dirstamp)
	-test -z "$(top_builddir)/src/compat/$(am__dirstamp)" || rm -f $(top_builddir)/src/compat/$(am__dirstamp)
	-test -z "$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)" || rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
	-test -z "$(top_builddir)/src/openvpn/$(am__dirstamp)" || rm -f $(top_builddir)/src/openvpn/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Po
	-rm -f $(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Po
	-rm -f ./$(DEPDIR)/argv_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/argv_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/argv_testdriver-test_argv.Po
	-rm -f ./$(DEPDIR)/auth_token_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/auth_token_testdriver-test_auth_token.Po
	-rm -f ./$(DEPDIR)/buffer_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/buffer_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/buffer_testdriver-test_buffer.Po
	-rm -f ./$(DEPDIR)/crypto_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/crypto_testdriver-test_crypto.Po
	-rm -f ./$(DEPDIR)/cryptoapi_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/cryptoapi_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Po
	-rm -f ./$(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Po
	-rm -f ./$(DEPDIR)/misc_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/misc_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/misc_testdriver-test_misc.Po
	-rm -f ./$(DEPDIR)/ncp_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/ncp_testdriver-test_ncp.Po
	-rm -f ./$(DEPDIR)/networking_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/networking_testdriver-test_networking.Po
	-rm -f ./$(DEPDIR)/packet_id_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/packet_id_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/packet_id_testdriver-test_packet_id.Po
	-rm -f ./$(DEPDIR)/pkcs11_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/pkcs11_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Po
	-rm -f ./$(DEPDIR)/pkcs11_testdriver-test_pkcs11.Po
	-rm -f ./$(DEPDIR)/pkt_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/pkt_testdriver-mock_win32_execve.Po
	-rm -f ./$(DEPDIR)/pkt_testdriver-test_pkt.Po
	-rm -f ./$(DEPDIR)/provider_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/provider_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/provider_testdriver-test_provider.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-mock_management.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-mock_win32_execve.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-test_ssl.Po
	-rm -f ./$(DEPDIR)/tls_crypt_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Po
	-rm -f ./$(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Po
	-rm -f ./$(DEPDIR)/user_pass_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/user_pass_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/user_pass_testdriver-mock_win32_execve.Po
	-rm -f ./$(DEPDIR)/user_pass_testdriver-test_user_pass.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f $(top_builddir)/src/compat/$(DEPDIR)/ncp_testdriver-compat-strsep.Po
	-rm -f $(top_builddir)/src/compat/$(DEPDIR)/ssl_testdriver-compat-strsep.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/argv_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/auth_token_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/buffer_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_epoch.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mss.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-mtu.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/crypto_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_helper.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/cryptoapi_testdriver-xkey_provider.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-list.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-options_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-ssl_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/misc_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-ssl_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ncp_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-networking_sitnl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/networking_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-reliable.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-session_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/packet_id_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-pkcs11_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_helper.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkcs11_testdriver-xkey_provider.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-reliable.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-session_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-ssl_pkt.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-tls_crypt.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/pkt_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_helper.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/provider_testdriver-xkey_provider.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-cryptoapi.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mss.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-mtu.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-options_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-ssl_verify_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-win32-util.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_helper.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ssl_testdriver-xkey_provider.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-argv.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/tls_crypt_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-base64.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-console.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-env_set.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-platform.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-run_command.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/user_pass_testdriver-win32-util.Po
	-rm -f ./$(DEPDIR)/argv_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/argv_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/argv_testdriver-test_argv.Po
	-rm -f ./$(DEPDIR)/auth_token_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/auth_token_testdriver-test_auth_token.Po
	-rm -f ./$(DEPDIR)/buffer_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/buffer_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/buffer_testdriver-test_buffer.Po
	-rm -f ./$(DEPDIR)/crypto_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/crypto_testdriver-test_crypto.Po
	-rm -f ./$(DEPDIR)/cryptoapi_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/cryptoapi_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/cryptoapi_testdriver-pkey_test_utils.Po
	-rm -f ./$(DEPDIR)/cryptoapi_testdriver-test_cryptoapi.Po
	-rm -f ./$(DEPDIR)/misc_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/misc_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/misc_testdriver-test_misc.Po
	-rm -f ./$(DEPDIR)/ncp_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/ncp_testdriver-test_ncp.Po
	-rm -f ./$(DEPDIR)/networking_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/networking_testdriver-test_networking.Po
	-rm -f ./$(DEPDIR)/packet_id_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/packet_id_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/packet_id_testdriver-test_packet_id.Po
	-rm -f ./$(DEPDIR)/pkcs11_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/pkcs11_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/pkcs11_testdriver-pkey_test_utils.Po
	-rm -f ./$(DEPDIR)/pkcs11_testdriver-test_pkcs11.Po
	-rm -f ./$(DEPDIR)/pkt_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/pkt_testdriver-mock_win32_execve.Po
	-rm -f ./$(DEPDIR)/pkt_testdriver-test_pkt.Po
	-rm -f ./$(DEPDIR)/provider_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/provider_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/provider_testdriver-test_provider.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-mock_management.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-mock_ssl_dependencies.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-mock_win32_execve.Po
	-rm -f ./$(DEPDIR)/ssl_testdriver-test_ssl.Po
	-rm -f ./$(DEPDIR)/tls_crypt_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/tls_crypt_testdriver-mock_win32_execve.Po
	-rm -f ./$(DEPDIR)/tls_crypt_testdriver-test_tls_crypt.Po
	-rm -f ./$(DEPDIR)/user_pass_testdriver-mock_get_random.Po
	-rm -f ./$(DEPDIR)/user_pass_testdriver-mock_msg.Po
	-rm -f ./$(DEPDIR)/user_pass_testdriver-mock_win32_execve.Po
	-rm -f ./$(DEPDIR)/user_pass_testdriver-test_user_pass.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
